{
	"id": "ff644a7bd575a5a9717f0a64141fbc0e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"HabitTokenReward.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract HabitReward is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable habitToken;\r\n    uint256 public rewardAmount;\r\n    mapping(address => bool) public hasClaimed;\r\n\r\n    event RewardClaimed(address indexed claimer, uint256 amount);\r\n    event TokensDeposited(uint256 amount);\r\n    event RewardAmountUpdated(uint256 newAmount);\r\n    event TokensRecovered(address indexed token, uint256 amount);\r\n\r\n    constructor(address _habitToken) Ownable(msg.sender) ReentrancyGuard() {\r\n        require(_habitToken != address(0), \"Invalid token address\");\r\n        habitToken = IERC20(_habitToken);\r\n    }\r\n\r\n    function setRewardAmount(uint256 _rewardAmount) external onlyOwner {\r\n        rewardAmount = _rewardAmount;\r\n        emit RewardAmountUpdated(_rewardAmount);\r\n    }\r\n\r\n    function claimReward() external nonReentrant {\r\n        require(!hasClaimed[msg.sender], \"Already claimed\");\r\n\r\n        uint256 currentReward = rewardAmount;\r\n        require(\r\n            habitToken.balanceOf(address(this)) >= currentReward,\r\n            \"Insufficient tokens\"\r\n        );\r\n\r\n        hasClaimed[msg.sender] = true;\r\n        habitToken.safeTransfer(msg.sender, currentReward);\r\n\r\n        emit RewardClaimed(msg.sender, currentReward);\r\n    }\r\n\r\n    function depositTokens(uint256 amount) external onlyOwner {\r\n        habitToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit TokensDeposited(amount);\r\n    }\r\n\r\n    function recoverERC20(\r\n        address tokenAddress,\r\n        uint256 amount\r\n    ) external onlyOwner {\r\n        require(tokenAddress != address(habitToken), \"Cannot recover habit token\");\r\n        IERC20(tokenAddress).safeTransfer(owner(), amount);\r\n        emit TokensRecovered(tokenAddress, amount);\r\n    }\r\n\r\n    receive() external payable {\r\n        revert(\"Contract does not accept ETH\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"HabitTokenReward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HabitTokenReward.sol": {
				"HabitReward": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_habitToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "RewardAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensRecovered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "habitToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardAmount",
									"type": "uint256"
								}
							],
							"name": "setRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HabitTokenReward.sol\":306:2183  contract HabitReward is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"HabitTokenReward.sol\":754:946  constructor(address _habitToken) Ownable(msg.sender) ReentrancyGuard() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"HabitTokenReward.sol\":795:805  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"HabitTokenReward.sol\":867:868  0 */\n  0x00\n    /* \"HabitTokenReward.sol\":844:869  _habitToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"HabitTokenReward.sol\":844:855  _habitToken */\n  dup2\n    /* \"HabitTokenReward.sol\":844:869  _habitToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"HabitTokenReward.sol\":836:895  require(_habitToken != address(0), \"Invalid token address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"HabitTokenReward.sol\":926:937  _habitToken */\n  dup1\n    /* \"HabitTokenReward.sol\":906:938  habitToken = IERC20(_habitToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"HabitTokenReward.sol\":754:946  constructor(address _habitToken) Ownable(msg.sender) ReentrancyGuard() {... */\n  pop\n    /* \"HabitTokenReward.sol\":306:2183  contract HabitReward is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":932:1051   */\ntag_44:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_46\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_27:\n    /* \"#utility.yul\":1289:1313   */\n  tag_48\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_10:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_50\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_28:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1900   */\ntag_29:\n    /* \"#utility.yul\":1869:1892   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1893   */\n  mstore\n    /* \"#utility.yul\":1729:1900   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1906:2272   */\ntag_30:\n    /* \"#utility.yul\":2048:2051   */\n  0x00\n    /* \"#utility.yul\":2069:2136   */\n  tag_54\n    /* \"#utility.yul\":2133:2135   */\n  0x15\n    /* \"#utility.yul\":2128:2131   */\n  dup4\n    /* \"#utility.yul\":2069:2136   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2062:2136   */\n  swap2\n  pop\n    /* \"#utility.yul\":2145:2238   */\n  tag_55\n    /* \"#utility.yul\":2234:2237   */\n  dup3\n    /* \"#utility.yul\":2145:2238   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2263:2265   */\n  0x20\n    /* \"#utility.yul\":2258:2261   */\n  dup3\n    /* \"#utility.yul\":2254:2266   */\n  add\n    /* \"#utility.yul\":2247:2266   */\n  swap1\n  pop\n    /* \"#utility.yul\":1906:2272   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2278:2697   */\ntag_17:\n    /* \"#utility.yul\":2444:2448   */\n  0x00\n    /* \"#utility.yul\":2482:2484   */\n  0x20\n    /* \"#utility.yul\":2471:2480   */\n  dup3\n    /* \"#utility.yul\":2467:2485   */\n  add\n    /* \"#utility.yul\":2459:2485   */\n  swap1\n  pop\n    /* \"#utility.yul\":2531:2540   */\n  dup2\n    /* \"#utility.yul\":2525:2529   */\n  dup2\n    /* \"#utility.yul\":2521:2541   */\n  sub\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2506:2515   */\n  dup4\n    /* \"#utility.yul\":2502:2519   */\n  add\n    /* \"#utility.yul\":2495:2542   */\n  mstore\n    /* \"#utility.yul\":2559:2690   */\n  tag_57\n    /* \"#utility.yul\":2685:2689   */\n  dup2\n    /* \"#utility.yul\":2559:2690   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2551:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2278:2697   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"HabitTokenReward.sol\":306:2183  contract HabitReward is Ownable, ReentrancyGuard {... */\ntag_18:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x405bc7889038864cc944554292d4cf5e153c65c8e94970ea18e857554fac5542\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"HabitTokenReward.sol\":306:2183  contract HabitReward is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa8a65a78\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xa8a65a78\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd49756e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7b2a7be\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73b2e80e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8c70d452\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"HabitTokenReward.sol\":2134:2172  revert(\"Contract does not accept ETH\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"HabitTokenReward.sol\":306:2183  contract HabitReward is Ownable, ReentrancyGuard {... */\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"HabitTokenReward.sol\":472:514  mapping(address => bool) public hasClaimed */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HabitTokenReward.sol\":1777:2088  function recoverERC20(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"HabitTokenReward.sol\":397:431  IERC20 public immutable habitToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HabitTokenReward.sol\":954:1118  function setRewardAmount(uint256 _rewardAmount) external onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"HabitTokenReward.sol\":1126:1583  function claimReward() external nonReentrant {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"HabitTokenReward.sol\":1591:1769  function depositTokens(uint256 amount) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      revert(0x00, 0x00)\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"HabitTokenReward.sol\":438:465  uint256 public rewardAmount */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"HabitTokenReward.sol\":472:514  mapping(address => bool) public hasClaimed */\n    tag_25:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"HabitTokenReward.sol\":1777:2088  function recoverERC20(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_71:\n        /* \"HabitTokenReward.sol\":1924:1934  habitToken */\n      immutable(\"0x405bc7889038864cc944554292d4cf5e153c65c8e94970ea18e857554fac5542\")\n        /* \"HabitTokenReward.sol\":1900:1935  tokenAddress != address(habitToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HabitTokenReward.sol\":1900:1912  tokenAddress */\n      dup3\n        /* \"HabitTokenReward.sol\":1900:1935  tokenAddress != address(habitToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"HabitTokenReward.sol\":1892:1966  require(tokenAddress != address(habitToken), \"Cannot recover habit token\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"HabitTokenReward.sol\":1977:2027  IERC20(tokenAddress).safeTransfer(owner(), amount) */\n      tag_76\n        /* \"HabitTokenReward.sol\":2011:2018  owner() */\n      tag_77\n        /* \"HabitTokenReward.sol\":2011:2016  owner */\n      tag_40\n        /* \"HabitTokenReward.sol\":2011:2018  owner() */\n      jump\t// in\n    tag_77:\n        /* \"HabitTokenReward.sol\":2020:2026  amount */\n      dup3\n        /* \"HabitTokenReward.sol\":1984:1996  tokenAddress */\n      dup5\n        /* \"HabitTokenReward.sol\":1977:2010  IERC20(tokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"HabitTokenReward.sol\":1977:2027  IERC20(tokenAddress).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"HabitTokenReward.sol\":2059:2071  tokenAddress */\n      dup2\n        /* \"HabitTokenReward.sol\":2043:2080  TokensRecovered(tokenAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x46d2e6e71fc567877b817ff3d940571f989d4ee4d40f2b70806d36e738feef6f\n        /* \"HabitTokenReward.sol\":2073:2079  amount */\n      dup3\n        /* \"HabitTokenReward.sol\":2043:2080  TokensRecovered(tokenAddress, amount) */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"HabitTokenReward.sol\":1777:2088  function recoverERC20(... */\n      pop\n      pop\n      jump\t// out\n        /* \"HabitTokenReward.sol\":397:431  IERC20 public immutable habitToken */\n    tag_35:\n      immutable(\"0x405bc7889038864cc944554292d4cf5e153c65c8e94970ea18e857554fac5542\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"HabitTokenReward.sol\":954:1118  function setRewardAmount(uint256 _rewardAmount) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"HabitTokenReward.sol\":1047:1060  _rewardAmount */\n      dup1\n        /* \"HabitTokenReward.sol\":1032:1044  rewardAmount */\n      0x02\n        /* \"HabitTokenReward.sol\":1032:1060  rewardAmount = _rewardAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HabitTokenReward.sol\":1076:1110  RewardAmountUpdated(_rewardAmount) */\n      0x9639dea65e74b72b1b86ccf3e4f9b6d23b88d2aad2f103d0b3afe394e67edade\n        /* \"HabitTokenReward.sol\":1096:1109  _rewardAmount */\n      dup2\n        /* \"HabitTokenReward.sol\":1076:1110  RewardAmountUpdated(_rewardAmount) */\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HabitTokenReward.sol\":954:1118  function setRewardAmount(uint256 _rewardAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HabitTokenReward.sol\":1126:1583  function claimReward() external nonReentrant {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_86\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_86:\n        /* \"HabitTokenReward.sol\":1191:1201  hasClaimed */\n      0x03\n        /* \"HabitTokenReward.sol\":1191:1213  hasClaimed[msg.sender] */\n      0x00\n        /* \"HabitTokenReward.sol\":1202:1212  msg.sender */\n      caller\n        /* \"HabitTokenReward.sol\":1191:1213  hasClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"HabitTokenReward.sol\":1190:1213  !hasClaimed[msg.sender] */\n      iszero\n        /* \"HabitTokenReward.sol\":1182:1233  require(!hasClaimed[msg.sender], \"Already claimed\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"HabitTokenReward.sol\":1246:1267  uint256 currentReward */\n      0x00\n        /* \"HabitTokenReward.sol\":1270:1282  rewardAmount */\n      sload(0x02)\n        /* \"HabitTokenReward.sol\":1246:1282  uint256 currentReward = rewardAmount */\n      swap1\n      pop\n        /* \"HabitTokenReward.sol\":1354:1367  currentReward */\n      dup1\n        /* \"HabitTokenReward.sol\":1315:1325  habitToken */\n      immutable(\"0x405bc7889038864cc944554292d4cf5e153c65c8e94970ea18e857554fac5542\")\n        /* \"HabitTokenReward.sol\":1315:1335  habitToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"HabitTokenReward.sol\":1344:1348  this */\n      address\n        /* \"HabitTokenReward.sol\":1315:1350  habitToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"HabitTokenReward.sol\":1315:1367  habitToken.balanceOf(address(this)) >= currentReward */\n      lt\n      iszero\n        /* \"HabitTokenReward.sol\":1293:1414  require(... */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"HabitTokenReward.sol\":1452:1456  true */\n      0x01\n        /* \"HabitTokenReward.sol\":1427:1437  hasClaimed */\n      0x03\n        /* \"HabitTokenReward.sol\":1427:1449  hasClaimed[msg.sender] */\n      0x00\n        /* \"HabitTokenReward.sol\":1438:1448  msg.sender */\n      caller\n        /* \"HabitTokenReward.sol\":1427:1449  hasClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"HabitTokenReward.sol\":1427:1456  hasClaimed[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"HabitTokenReward.sol\":1467:1517  habitToken.safeTransfer(msg.sender, currentReward) */\n      tag_100\n        /* \"HabitTokenReward.sol\":1491:1501  msg.sender */\n      caller\n        /* \"HabitTokenReward.sol\":1503:1516  currentReward */\n      dup3\n        /* \"HabitTokenReward.sol\":1467:1477  habitToken */\n      immutable(\"0x405bc7889038864cc944554292d4cf5e153c65c8e94970ea18e857554fac5542\")\n        /* \"HabitTokenReward.sol\":1467:1490  habitToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"HabitTokenReward.sol\":1467:1517  habitToken.safeTransfer(msg.sender, currentReward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"HabitTokenReward.sol\":1549:1559  msg.sender */\n      caller\n        /* \"HabitTokenReward.sol\":1535:1575  RewardClaimed(msg.sender, currentReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"HabitTokenReward.sol\":1561:1574  currentReward */\n      dup3\n        /* \"HabitTokenReward.sol\":1535:1575  RewardClaimed(msg.sender, currentReward) */\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"HabitTokenReward.sol\":1171:1583  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_102\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_103\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_102:\n        /* \"HabitTokenReward.sol\":1126:1583  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"HabitTokenReward.sol\":1591:1769  function depositTokens(uint256 amount) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"HabitTokenReward.sol\":1660:1722  habitToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_107\n        /* \"HabitTokenReward.sol\":1688:1698  msg.sender */\n      caller\n        /* \"HabitTokenReward.sol\":1708:1712  this */\n      address\n        /* \"HabitTokenReward.sol\":1715:1721  amount */\n      dup4\n        /* \"HabitTokenReward.sol\":1660:1670  habitToken */\n      immutable(\"0x405bc7889038864cc944554292d4cf5e153c65c8e94970ea18e857554fac5542\")\n        /* \"HabitTokenReward.sol\":1660:1687  habitToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_108\n      swap1\n        /* \"HabitTokenReward.sol\":1660:1722  habitToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"HabitTokenReward.sol\":1738:1761  TokensDeposited(amount) */\n      0x77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d1\n        /* \"HabitTokenReward.sol\":1754:1760  amount */\n      dup2\n        /* \"HabitTokenReward.sol\":1738:1761  TokensDeposited(amount) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HabitTokenReward.sol\":1591:1769  function depositTokens(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HabitTokenReward.sol\":438:465  uint256 public rewardAmount */\n    tag_61:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_136\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_142)\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_145:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:360   */\n    tag_146:\n        /* \"#utility.yul\":322:352   */\n      0x436f6e747261637420646f6573206e6f74206163636570742045544800000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:353   */\n      mstore\n        /* \"#utility.yul\":182:360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":366:732   */\n    tag_147:\n        /* \"#utility.yul\":508:511   */\n      0x00\n        /* \"#utility.yul\":529:596   */\n      tag_180\n        /* \"#utility.yul\":593:595   */\n      0x1c\n        /* \"#utility.yul\":588:591   */\n      dup4\n        /* \"#utility.yul\":529:596   */\n      tag_145\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":522:596   */\n      swap2\n      pop\n        /* \"#utility.yul\":605:698   */\n      tag_181\n        /* \"#utility.yul\":694:697   */\n      dup3\n        /* \"#utility.yul\":605:698   */\n      tag_146\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":718:721   */\n      dup3\n        /* \"#utility.yul\":714:726   */\n      add\n        /* \"#utility.yul\":707:726   */\n      swap1\n      pop\n        /* \"#utility.yul\":366:732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":738:1157   */\n    tag_17:\n        /* \"#utility.yul\":904:908   */\n      0x00\n        /* \"#utility.yul\":942:944   */\n      0x20\n        /* \"#utility.yul\":931:940   */\n      dup3\n        /* \"#utility.yul\":927:945   */\n      add\n        /* \"#utility.yul\":919:945   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:1000   */\n      dup2\n        /* \"#utility.yul\":985:989   */\n      dup2\n        /* \"#utility.yul\":981:1001   */\n      sub\n        /* \"#utility.yul\":977:978   */\n      0x00\n        /* \"#utility.yul\":966:975   */\n      dup4\n        /* \"#utility.yul\":962:979   */\n      add\n        /* \"#utility.yul\":955:1002   */\n      mstore\n        /* \"#utility.yul\":1019:1150   */\n      tag_183\n        /* \"#utility.yul\":1145:1149   */\n      dup2\n        /* \"#utility.yul\":1019:1150   */\n      tag_147\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1011:1150   */\n      swap1\n      pop\n        /* \"#utility.yul\":738:1157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1244:1361   */\n    tag_149:\n        /* \"#utility.yul\":1353:1354   */\n      0x00\n        /* \"#utility.yul\":1350:1351   */\n      0x00\n        /* \"#utility.yul\":1343:1355   */\n      revert\n        /* \"#utility.yul\":1490:1616   */\n    tag_151:\n        /* \"#utility.yul\":1527:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1609   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1560:1565   */\n      dup3\n        /* \"#utility.yul\":1556:1610   */\n      and\n        /* \"#utility.yul\":1545:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1490:1616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1622:1718   */\n    tag_152:\n        /* \"#utility.yul\":1659:1666   */\n      0x00\n        /* \"#utility.yul\":1688:1712   */\n      tag_189\n        /* \"#utility.yul\":1706:1711   */\n      dup3\n        /* \"#utility.yul\":1688:1712   */\n      tag_151\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1677:1712   */\n      swap1\n      pop\n        /* \"#utility.yul\":1622:1718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1724:1846   */\n    tag_153:\n        /* \"#utility.yul\":1797:1821   */\n      tag_191\n        /* \"#utility.yul\":1815:1820   */\n      dup2\n        /* \"#utility.yul\":1797:1821   */\n      tag_152\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1790:1795   */\n      dup2\n        /* \"#utility.yul\":1787:1822   */\n      eq\n        /* \"#utility.yul\":1777:1840   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":1836:1837   */\n      0x00\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1826:1838   */\n      revert\n        /* \"#utility.yul\":1777:1840   */\n    tag_192:\n        /* \"#utility.yul\":1724:1846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1991   */\n    tag_154:\n        /* \"#utility.yul\":1898:1903   */\n      0x00\n        /* \"#utility.yul\":1936:1942   */\n      dup2\n        /* \"#utility.yul\":1923:1943   */\n      calldataload\n        /* \"#utility.yul\":1914:1943   */\n      swap1\n      pop\n        /* \"#utility.yul\":1952:1985   */\n      tag_194\n        /* \"#utility.yul\":1979:1984   */\n      dup2\n        /* \"#utility.yul\":1952:1985   */\n      tag_153\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1852:1991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1997:2326   */\n    tag_24:\n        /* \"#utility.yul\":2056:2062   */\n      0x00\n        /* \"#utility.yul\":2105:2107   */\n      0x20\n        /* \"#utility.yul\":2093:2102   */\n      dup3\n        /* \"#utility.yul\":2084:2091   */\n      dup5\n        /* \"#utility.yul\":2080:2103   */\n      sub\n        /* \"#utility.yul\":2076:2108   */\n      slt\n        /* \"#utility.yul\":2073:2192   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2111:2190   */\n      tag_197\n      tag_149\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2073:2192   */\n    tag_196:\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2256:2309   */\n      tag_198\n        /* \"#utility.yul\":2301:2308   */\n      dup5\n        /* \"#utility.yul\":2292:2298   */\n      dup3\n        /* \"#utility.yul\":2281:2290   */\n      dup6\n        /* \"#utility.yul\":2277:2299   */\n      add\n        /* \"#utility.yul\":2256:2309   */\n      tag_154\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2246:2309   */\n      swap2\n      pop\n        /* \"#utility.yul\":2202:2319   */\n      pop\n        /* \"#utility.yul\":1997:2326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2422   */\n    tag_155:\n        /* \"#utility.yul\":2366:2373   */\n      0x00\n        /* \"#utility.yul\":2409:2414   */\n      dup2\n        /* \"#utility.yul\":2402:2415   */\n      iszero\n        /* \"#utility.yul\":2395:2416   */\n      iszero\n        /* \"#utility.yul\":2384:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2332:2422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2537   */\n    tag_156:\n        /* \"#utility.yul\":2509:2530   */\n      tag_201\n        /* \"#utility.yul\":2524:2529   */\n      dup2\n        /* \"#utility.yul\":2509:2530   */\n      tag_155\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2504:2507   */\n      dup3\n        /* \"#utility.yul\":2497:2531   */\n      mstore\n        /* \"#utility.yul\":2428:2537   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2753   */\n    tag_27:\n        /* \"#utility.yul\":2630:2634   */\n      0x00\n        /* \"#utility.yul\":2668:2670   */\n      0x20\n        /* \"#utility.yul\":2657:2666   */\n      dup3\n        /* \"#utility.yul\":2653:2671   */\n      add\n        /* \"#utility.yul\":2645:2671   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:2746   */\n      tag_203\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2732:2741   */\n      dup4\n        /* \"#utility.yul\":2728:2745   */\n      add\n        /* \"#utility.yul\":2719:2725   */\n      dup5\n        /* \"#utility.yul\":2681:2746   */\n      tag_156\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2543:2753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2836   */\n    tag_157:\n        /* \"#utility.yul\":2796:2803   */\n      0x00\n        /* \"#utility.yul\":2825:2830   */\n      dup2\n        /* \"#utility.yul\":2814:2830   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:2836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2842:2964   */\n    tag_158:\n        /* \"#utility.yul\":2915:2939   */\n      tag_206\n        /* \"#utility.yul\":2933:2938   */\n      dup2\n        /* \"#utility.yul\":2915:2939   */\n      tag_157\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2908:2913   */\n      dup2\n        /* \"#utility.yul\":2905:2940   */\n      eq\n        /* \"#utility.yul\":2895:2958   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2954:2955   */\n      0x00\n        /* \"#utility.yul\":2951:2952   */\n      0x00\n        /* \"#utility.yul\":2944:2956   */\n      revert\n        /* \"#utility.yul\":2895:2958   */\n    tag_207:\n        /* \"#utility.yul\":2842:2964   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2970:3109   */\n    tag_159:\n        /* \"#utility.yul\":3016:3021   */\n      0x00\n        /* \"#utility.yul\":3054:3060   */\n      dup2\n        /* \"#utility.yul\":3041:3061   */\n      calldataload\n        /* \"#utility.yul\":3032:3061   */\n      swap1\n      pop\n        /* \"#utility.yul\":3070:3103   */\n      tag_209\n        /* \"#utility.yul\":3097:3102   */\n      dup2\n        /* \"#utility.yul\":3070:3103   */\n      tag_158\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2970:3109   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3589   */\n    tag_31:\n        /* \"#utility.yul\":3183:3189   */\n      0x00\n        /* \"#utility.yul\":3191:3197   */\n      0x00\n        /* \"#utility.yul\":3240:3242   */\n      0x40\n        /* \"#utility.yul\":3228:3237   */\n      dup4\n        /* \"#utility.yul\":3219:3226   */\n      dup6\n        /* \"#utility.yul\":3215:3238   */\n      sub\n        /* \"#utility.yul\":3211:3243   */\n      slt\n        /* \"#utility.yul\":3208:3327   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3246:3325   */\n      tag_212\n      tag_149\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3208:3327   */\n    tag_211:\n        /* \"#utility.yul\":3366:3367   */\n      0x00\n        /* \"#utility.yul\":3391:3444   */\n      tag_213\n        /* \"#utility.yul\":3436:3443   */\n      dup6\n        /* \"#utility.yul\":3427:3433   */\n      dup3\n        /* \"#utility.yul\":3416:3425   */\n      dup7\n        /* \"#utility.yul\":3412:3434   */\n      add\n        /* \"#utility.yul\":3391:3444   */\n      tag_154\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3381:3444   */\n      swap3\n      pop\n        /* \"#utility.yul\":3337:3454   */\n      pop\n        /* \"#utility.yul\":3493:3495   */\n      0x20\n        /* \"#utility.yul\":3519:3572   */\n      tag_214\n        /* \"#utility.yul\":3564:3571   */\n      dup6\n        /* \"#utility.yul\":3555:3561   */\n      dup3\n        /* \"#utility.yul\":3544:3553   */\n      dup7\n        /* \"#utility.yul\":3540:3562   */\n      add\n        /* \"#utility.yul\":3519:3572   */\n      tag_159\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3509:3572   */\n      swap2\n      pop\n        /* \"#utility.yul\":3464:3582   */\n      pop\n        /* \"#utility.yul\":3115:3589   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3595:3655   */\n    tag_160:\n        /* \"#utility.yul\":3623:3626   */\n      0x00\n        /* \"#utility.yul\":3644:3649   */\n      dup2\n        /* \"#utility.yul\":3637:3649   */\n      swap1\n      pop\n        /* \"#utility.yul\":3595:3655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3661:3803   */\n    tag_161:\n        /* \"#utility.yul\":3711:3720   */\n      0x00\n        /* \"#utility.yul\":3744:3797   */\n      tag_217\n        /* \"#utility.yul\":3762:3796   */\n      tag_218\n        /* \"#utility.yul\":3771:3795   */\n      tag_219\n        /* \"#utility.yul\":3789:3794   */\n      dup5\n        /* \"#utility.yul\":3771:3795   */\n      tag_151\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3762:3796   */\n      tag_160\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3744:3797   */\n      tag_151\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3731:3797   */\n      swap1\n      pop\n        /* \"#utility.yul\":3661:3803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3809:3935   */\n    tag_162:\n        /* \"#utility.yul\":3859:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3929   */\n      tag_221\n        /* \"#utility.yul\":3923:3928   */\n      dup3\n        /* \"#utility.yul\":3892:3929   */\n      tag_161\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3879:3929   */\n      swap1\n      pop\n        /* \"#utility.yul\":3809:3935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3941:4081   */\n    tag_163:\n        /* \"#utility.yul\":4005:4014   */\n      0x00\n        /* \"#utility.yul\":4038:4075   */\n      tag_223\n        /* \"#utility.yul\":4069:4074   */\n      dup3\n        /* \"#utility.yul\":4038:4075   */\n      tag_162\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4025:4075   */\n      swap1\n      pop\n        /* \"#utility.yul\":3941:4081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4087:4246   */\n    tag_164:\n        /* \"#utility.yul\":4188:4239   */\n      tag_225\n        /* \"#utility.yul\":4233:4238   */\n      dup2\n        /* \"#utility.yul\":4188:4239   */\n      tag_163\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4183:4186   */\n      dup3\n        /* \"#utility.yul\":4176:4240   */\n      mstore\n        /* \"#utility.yul\":4087:4246   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4502   */\n    tag_37:\n        /* \"#utility.yul\":4359:4363   */\n      0x00\n        /* \"#utility.yul\":4397:4399   */\n      0x20\n        /* \"#utility.yul\":4386:4395   */\n      dup3\n        /* \"#utility.yul\":4382:4400   */\n      add\n        /* \"#utility.yul\":4374:4400   */\n      swap1\n      pop\n        /* \"#utility.yul\":4410:4495   */\n      tag_227\n        /* \"#utility.yul\":4492:4493   */\n      0x00\n        /* \"#utility.yul\":4481:4490   */\n      dup4\n        /* \"#utility.yul\":4477:4494   */\n      add\n        /* \"#utility.yul\":4468:4474   */\n      dup5\n        /* \"#utility.yul\":4410:4495   */\n      tag_164\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4252:4502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4508:4626   */\n    tag_165:\n        /* \"#utility.yul\":4595:4619   */\n      tag_229\n        /* \"#utility.yul\":4613:4618   */\n      dup2\n        /* \"#utility.yul\":4595:4619   */\n      tag_152\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4590:4593   */\n      dup3\n        /* \"#utility.yul\":4583:4620   */\n      mstore\n        /* \"#utility.yul\":4508:4626   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4632:4854   */\n    tag_42:\n        /* \"#utility.yul\":4725:4729   */\n      0x00\n        /* \"#utility.yul\":4763:4765   */\n      0x20\n        /* \"#utility.yul\":4752:4761   */\n      dup3\n        /* \"#utility.yul\":4748:4766   */\n      add\n        /* \"#utility.yul\":4740:4766   */\n      swap1\n      pop\n        /* \"#utility.yul\":4776:4847   */\n      tag_231\n        /* \"#utility.yul\":4844:4845   */\n      0x00\n        /* \"#utility.yul\":4833:4842   */\n      dup4\n        /* \"#utility.yul\":4829:4846   */\n      add\n        /* \"#utility.yul\":4820:4826   */\n      dup5\n        /* \"#utility.yul\":4776:4847   */\n      tag_165\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4632:4854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:5189   */\n    tag_46:\n        /* \"#utility.yul\":4919:4925   */\n      0x00\n        /* \"#utility.yul\":4968:4970   */\n      0x20\n        /* \"#utility.yul\":4956:4965   */\n      dup3\n        /* \"#utility.yul\":4947:4954   */\n      dup5\n        /* \"#utility.yul\":4943:4966   */\n      sub\n        /* \"#utility.yul\":4939:4971   */\n      slt\n        /* \"#utility.yul\":4936:5055   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4974:5053   */\n      tag_234\n      tag_149\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4936:5055   */\n    tag_233:\n        /* \"#utility.yul\":5094:5095   */\n      0x00\n        /* \"#utility.yul\":5119:5172   */\n      tag_235\n        /* \"#utility.yul\":5164:5171   */\n      dup5\n        /* \"#utility.yul\":5155:5161   */\n      dup3\n        /* \"#utility.yul\":5144:5153   */\n      dup6\n        /* \"#utility.yul\":5140:5162   */\n      add\n        /* \"#utility.yul\":5119:5172   */\n      tag_159\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5109:5172   */\n      swap2\n      pop\n        /* \"#utility.yul\":5065:5182   */\n      pop\n        /* \"#utility.yul\":4860:5189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5195:5313   */\n    tag_166:\n        /* \"#utility.yul\":5282:5306   */\n      tag_237\n        /* \"#utility.yul\":5300:5305   */\n      dup2\n        /* \"#utility.yul\":5282:5306   */\n      tag_157\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5277:5280   */\n      dup3\n        /* \"#utility.yul\":5270:5307   */\n      mstore\n        /* \"#utility.yul\":5195:5313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5319:5541   */\n    tag_63:\n        /* \"#utility.yul\":5412:5416   */\n      0x00\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup3\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5427:5453   */\n      swap1\n      pop\n        /* \"#utility.yul\":5463:5534   */\n      tag_239\n        /* \"#utility.yul\":5531:5532   */\n      0x00\n        /* \"#utility.yul\":5520:5529   */\n      dup4\n        /* \"#utility.yul\":5516:5533   */\n      add\n        /* \"#utility.yul\":5507:5513   */\n      dup5\n        /* \"#utility.yul\":5463:5534   */\n      tag_166\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5319:5541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5547:5723   */\n    tag_167:\n        /* \"#utility.yul\":5687:5715   */\n      0x43616e6e6f74207265636f76657220686162697420746f6b656e000000000000\n        /* \"#utility.yul\":5683:5684   */\n      0x00\n        /* \"#utility.yul\":5675:5681   */\n      dup3\n        /* \"#utility.yul\":5671:5685   */\n      add\n        /* \"#utility.yul\":5664:5716   */\n      mstore\n        /* \"#utility.yul\":5547:5723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5729:6095   */\n    tag_168:\n        /* \"#utility.yul\":5871:5874   */\n      0x00\n        /* \"#utility.yul\":5892:5959   */\n      tag_242\n        /* \"#utility.yul\":5956:5958   */\n      0x1a\n        /* \"#utility.yul\":5951:5954   */\n      dup4\n        /* \"#utility.yul\":5892:5959   */\n      tag_145\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5885:5959   */\n      swap2\n      pop\n        /* \"#utility.yul\":5968:6061   */\n      tag_243\n        /* \"#utility.yul\":6057:6060   */\n      dup3\n        /* \"#utility.yul\":5968:6061   */\n      tag_167\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6086:6088   */\n      0x20\n        /* \"#utility.yul\":6081:6084   */\n      dup3\n        /* \"#utility.yul\":6077:6089   */\n      add\n        /* \"#utility.yul\":6070:6089   */\n      swap1\n      pop\n        /* \"#utility.yul\":5729:6095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6520   */\n    tag_75:\n        /* \"#utility.yul\":6267:6271   */\n      0x00\n        /* \"#utility.yul\":6305:6307   */\n      0x20\n        /* \"#utility.yul\":6294:6303   */\n      dup3\n        /* \"#utility.yul\":6290:6308   */\n      add\n        /* \"#utility.yul\":6282:6308   */\n      swap1\n      pop\n        /* \"#utility.yul\":6354:6363   */\n      dup2\n        /* \"#utility.yul\":6348:6352   */\n      dup2\n        /* \"#utility.yul\":6344:6364   */\n      sub\n        /* \"#utility.yul\":6340:6341   */\n      0x00\n        /* \"#utility.yul\":6329:6338   */\n      dup4\n        /* \"#utility.yul\":6325:6342   */\n      add\n        /* \"#utility.yul\":6318:6365   */\n      mstore\n        /* \"#utility.yul\":6382:6513   */\n      tag_245\n        /* \"#utility.yul\":6508:6512   */\n      dup2\n        /* \"#utility.yul\":6382:6513   */\n      tag_168\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6374:6513   */\n      swap1\n      pop\n        /* \"#utility.yul\":6101:6520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6526:6691   */\n    tag_169:\n        /* \"#utility.yul\":6666:6683   */\n      0x416c726561647920636c61696d65640000000000000000000000000000000000\n        /* \"#utility.yul\":6662:6663   */\n      0x00\n        /* \"#utility.yul\":6654:6660   */\n      dup3\n        /* \"#utility.yul\":6650:6664   */\n      add\n        /* \"#utility.yul\":6643:6684   */\n      mstore\n        /* \"#utility.yul\":6526:6691   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6697:7063   */\n    tag_170:\n        /* \"#utility.yul\":6839:6842   */\n      0x00\n        /* \"#utility.yul\":6860:6927   */\n      tag_248\n        /* \"#utility.yul\":6924:6926   */\n      0x0f\n        /* \"#utility.yul\":6919:6922   */\n      dup4\n        /* \"#utility.yul\":6860:6927   */\n      tag_145\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6853:6927   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7029   */\n      tag_249\n        /* \"#utility.yul\":7025:7028   */\n      dup3\n        /* \"#utility.yul\":6936:7029   */\n      tag_169\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7054:7056   */\n      0x20\n        /* \"#utility.yul\":7049:7052   */\n      dup3\n        /* \"#utility.yul\":7045:7057   */\n      add\n        /* \"#utility.yul\":7038:7057   */\n      swap1\n      pop\n        /* \"#utility.yul\":6697:7063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7488   */\n    tag_91:\n        /* \"#utility.yul\":7235:7239   */\n      0x00\n        /* \"#utility.yul\":7273:7275   */\n      0x20\n        /* \"#utility.yul\":7262:7271   */\n      dup3\n        /* \"#utility.yul\":7258:7276   */\n      add\n        /* \"#utility.yul\":7250:7276   */\n      swap1\n      pop\n        /* \"#utility.yul\":7322:7331   */\n      dup2\n        /* \"#utility.yul\":7316:7320   */\n      dup2\n        /* \"#utility.yul\":7312:7332   */\n      sub\n        /* \"#utility.yul\":7308:7309   */\n      0x00\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7293:7310   */\n      add\n        /* \"#utility.yul\":7286:7333   */\n      mstore\n        /* \"#utility.yul\":7350:7481   */\n      tag_251\n        /* \"#utility.yul\":7476:7480   */\n      dup2\n        /* \"#utility.yul\":7350:7481   */\n      tag_170\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7342:7481   */\n      swap1\n      pop\n        /* \"#utility.yul\":7069:7488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7494:7637   */\n    tag_171:\n        /* \"#utility.yul\":7551:7556   */\n      0x00\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7576:7589   */\n      mload\n        /* \"#utility.yul\":7567:7589   */\n      swap1\n      pop\n        /* \"#utility.yul\":7598:7631   */\n      tag_253\n        /* \"#utility.yul\":7625:7630   */\n      dup2\n        /* \"#utility.yul\":7598:7631   */\n      tag_158\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7494:7637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7643:7994   */\n    tag_96:\n        /* \"#utility.yul\":7713:7719   */\n      0x00\n        /* \"#utility.yul\":7762:7764   */\n      0x20\n        /* \"#utility.yul\":7750:7759   */\n      dup3\n        /* \"#utility.yul\":7741:7748   */\n      dup5\n        /* \"#utility.yul\":7737:7760   */\n      sub\n        /* \"#utility.yul\":7733:7765   */\n      slt\n        /* \"#utility.yul\":7730:7849   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":7768:7847   */\n      tag_256\n      tag_149\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7730:7849   */\n    tag_255:\n        /* \"#utility.yul\":7888:7889   */\n      0x00\n        /* \"#utility.yul\":7913:7977   */\n      tag_257\n        /* \"#utility.yul\":7969:7976   */\n      dup5\n        /* \"#utility.yul\":7960:7966   */\n      dup3\n        /* \"#utility.yul\":7949:7958   */\n      dup6\n        /* \"#utility.yul\":7945:7967   */\n      add\n        /* \"#utility.yul\":7913:7977   */\n      tag_171\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7903:7977   */\n      swap2\n      pop\n        /* \"#utility.yul\":7859:7987   */\n      pop\n        /* \"#utility.yul\":7643:7994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8000:8169   */\n    tag_172:\n        /* \"#utility.yul\":8140:8161   */\n      0x496e73756666696369656e7420746f6b656e7300000000000000000000000000\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8128:8134   */\n      dup3\n        /* \"#utility.yul\":8124:8138   */\n      add\n        /* \"#utility.yul\":8117:8162   */\n      mstore\n        /* \"#utility.yul\":8000:8169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8175:8541   */\n    tag_173:\n        /* \"#utility.yul\":8317:8320   */\n      0x00\n        /* \"#utility.yul\":8338:8405   */\n      tag_260\n        /* \"#utility.yul\":8402:8404   */\n      0x13\n        /* \"#utility.yul\":8397:8400   */\n      dup4\n        /* \"#utility.yul\":8338:8405   */\n      tag_145\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8331:8405   */\n      swap2\n      pop\n        /* \"#utility.yul\":8414:8507   */\n      tag_261\n        /* \"#utility.yul\":8503:8506   */\n      dup3\n        /* \"#utility.yul\":8414:8507   */\n      tag_172\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8532:8534   */\n      0x20\n        /* \"#utility.yul\":8527:8530   */\n      dup3\n        /* \"#utility.yul\":8523:8535   */\n      add\n        /* \"#utility.yul\":8516:8535   */\n      swap1\n      pop\n        /* \"#utility.yul\":8175:8541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8547:8966   */\n    tag_99:\n        /* \"#utility.yul\":8713:8717   */\n      0x00\n        /* \"#utility.yul\":8751:8753   */\n      0x20\n        /* \"#utility.yul\":8740:8749   */\n      dup3\n        /* \"#utility.yul\":8736:8754   */\n      add\n        /* \"#utility.yul\":8728:8754   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8809   */\n      dup2\n        /* \"#utility.yul\":8794:8798   */\n      dup2\n        /* \"#utility.yul\":8790:8810   */\n      sub\n        /* \"#utility.yul\":8786:8787   */\n      0x00\n        /* \"#utility.yul\":8775:8784   */\n      dup4\n        /* \"#utility.yul\":8771:8788   */\n      add\n        /* \"#utility.yul\":8764:8811   */\n      mstore\n        /* \"#utility.yul\":8828:8959   */\n      tag_263\n        /* \"#utility.yul\":8954:8958   */\n      dup2\n        /* \"#utility.yul\":8828:8959   */\n      tag_173\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8820:8959   */\n      swap1\n      pop\n        /* \"#utility.yul\":8547:8966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8972:9304   */\n    tag_127:\n        /* \"#utility.yul\":9093:9097   */\n      0x00\n        /* \"#utility.yul\":9131:9133   */\n      0x40\n        /* \"#utility.yul\":9120:9129   */\n      dup3\n        /* \"#utility.yul\":9116:9134   */\n      add\n        /* \"#utility.yul\":9108:9134   */\n      swap1\n      pop\n        /* \"#utility.yul\":9144:9215   */\n      tag_265\n        /* \"#utility.yul\":9212:9213   */\n      0x00\n        /* \"#utility.yul\":9201:9210   */\n      dup4\n        /* \"#utility.yul\":9197:9214   */\n      add\n        /* \"#utility.yul\":9188:9194   */\n      dup6\n        /* \"#utility.yul\":9144:9215   */\n      tag_165\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9225:9297   */\n      tag_266\n        /* \"#utility.yul\":9293:9295   */\n      0x20\n        /* \"#utility.yul\":9282:9291   */\n      dup4\n        /* \"#utility.yul\":9278:9296   */\n      add\n        /* \"#utility.yul\":9269:9275   */\n      dup5\n        /* \"#utility.yul\":9225:9297   */\n      tag_166\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8972:9304   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9310:9491   */\n    tag_174:\n        /* \"#utility.yul\":9450:9483   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9446:9447   */\n      0x00\n        /* \"#utility.yul\":9438:9444   */\n      dup3\n        /* \"#utility.yul\":9434:9448   */\n      add\n        /* \"#utility.yul\":9427:9484   */\n      mstore\n        /* \"#utility.yul\":9310:9491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9497:9863   */\n    tag_175:\n        /* \"#utility.yul\":9639:9642   */\n      0x00\n        /* \"#utility.yul\":9660:9727   */\n      tag_269\n        /* \"#utility.yul\":9724:9726   */\n      0x1f\n        /* \"#utility.yul\":9719:9722   */\n      dup4\n        /* \"#utility.yul\":9660:9727   */\n      tag_145\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9653:9727   */\n      swap2\n      pop\n        /* \"#utility.yul\":9736:9829   */\n      tag_270\n        /* \"#utility.yul\":9825:9828   */\n      dup3\n        /* \"#utility.yul\":9736:9829   */\n      tag_174\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9854:9856   */\n      0x20\n        /* \"#utility.yul\":9849:9852   */\n      dup3\n        /* \"#utility.yul\":9845:9857   */\n      add\n        /* \"#utility.yul\":9838:9857   */\n      swap1\n      pop\n        /* \"#utility.yul\":9497:9863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9869:10288   */\n    tag_132:\n        /* \"#utility.yul\":10035:10039   */\n      0x00\n        /* \"#utility.yul\":10073:10075   */\n      0x20\n        /* \"#utility.yul\":10062:10071   */\n      dup3\n        /* \"#utility.yul\":10058:10076   */\n      add\n        /* \"#utility.yul\":10050:10076   */\n      swap1\n      pop\n        /* \"#utility.yul\":10122:10131   */\n      dup2\n        /* \"#utility.yul\":10116:10120   */\n      dup2\n        /* \"#utility.yul\":10112:10132   */\n      sub\n        /* \"#utility.yul\":10108:10109   */\n      0x00\n        /* \"#utility.yul\":10097:10106   */\n      dup4\n        /* \"#utility.yul\":10093:10110   */\n      add\n        /* \"#utility.yul\":10086:10133   */\n      mstore\n        /* \"#utility.yul\":10150:10281   */\n      tag_272\n        /* \"#utility.yul\":10276:10280   */\n      dup2\n        /* \"#utility.yul\":10150:10281   */\n      tag_175\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10142:10281   */\n      swap1\n      pop\n        /* \"#utility.yul\":9869:10288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10294:10736   */\n    tag_137:\n        /* \"#utility.yul\":10443:10447   */\n      0x00\n        /* \"#utility.yul\":10481:10483   */\n      0x60\n        /* \"#utility.yul\":10470:10479   */\n      dup3\n        /* \"#utility.yul\":10466:10484   */\n      add\n        /* \"#utility.yul\":10458:10484   */\n      swap1\n      pop\n        /* \"#utility.yul\":10494:10565   */\n      tag_274\n        /* \"#utility.yul\":10562:10563   */\n      0x00\n        /* \"#utility.yul\":10551:10560   */\n      dup4\n        /* \"#utility.yul\":10547:10564   */\n      add\n        /* \"#utility.yul\":10538:10544   */\n      dup7\n        /* \"#utility.yul\":10494:10565   */\n      tag_165\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10575:10647   */\n      tag_275\n        /* \"#utility.yul\":10643:10645   */\n      0x20\n        /* \"#utility.yul\":10632:10641   */\n      dup4\n        /* \"#utility.yul\":10628:10646   */\n      add\n        /* \"#utility.yul\":10619:10625   */\n      dup6\n        /* \"#utility.yul\":10575:10647   */\n      tag_165\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10657:10729   */\n      tag_276\n        /* \"#utility.yul\":10725:10727   */\n      0x40\n        /* \"#utility.yul\":10714:10723   */\n      dup4\n        /* \"#utility.yul\":10710:10728   */\n      add\n        /* \"#utility.yul\":10701:10707   */\n      dup5\n        /* \"#utility.yul\":10657:10729   */\n      tag_166\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10294:10736   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220273c4081066474e69f851888ffe1134d7dc4d85426babdc87c4ed314476d38e364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 353,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2700:10",
										"nodeType": "YulBlock",
										"src": "0:2700:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nativeSrc": "1267:53:10",
													"nodeType": "YulBlock",
													"src": "1267:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:10"
																		},
																		"nativeSrc": "1289:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:10"
																},
																"nativeSrc": "1277:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:10"
															},
															"nativeSrc": "1277:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:10",
														"nodeType": "YulTypedName",
														"src": "1255:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:10",
														"nodeType": "YulTypedName",
														"src": "1262:3:10",
														"type": ""
													}
												],
												"src": "1202:118:10"
											},
											{
												"body": {
													"nativeSrc": "1424:124:10",
													"nodeType": "YulBlock",
													"src": "1424:124:10",
													"statements": [
														{
															"nativeSrc": "1434:26:10",
															"nodeType": "YulAssignment",
															"src": "1434:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:10"
																},
																"nativeSrc": "1442:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:10"
																		},
																		"nativeSrc": "1523:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:10"
																},
																"nativeSrc": "1470:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:10"
															},
															"nativeSrc": "1470:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:10",
														"nodeType": "YulTypedName",
														"src": "1396:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:10",
														"nodeType": "YulTypedName",
														"src": "1408:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:10",
														"nodeType": "YulTypedName",
														"src": "1419:4:10",
														"type": ""
													}
												],
												"src": "1326:222:10"
											},
											{
												"body": {
													"nativeSrc": "1650:73:10",
													"nodeType": "YulBlock",
													"src": "1650:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:10"
																},
																"nativeSrc": "1660:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1660:19:10"
															},
															"nativeSrc": "1660:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:10"
														},
														{
															"nativeSrc": "1688:29:10",
															"nodeType": "YulAssignment",
															"src": "1688:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1707:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1703:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:10"
																},
																"nativeSrc": "1703:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1703:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1688:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1622:3:10",
														"nodeType": "YulTypedName",
														"src": "1622:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1627:6:10",
														"nodeType": "YulTypedName",
														"src": "1627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1638:11:10",
														"nodeType": "YulTypedName",
														"src": "1638:11:10",
														"type": ""
													}
												],
												"src": "1554:169:10"
											},
											{
												"body": {
													"nativeSrc": "1835:65:10",
													"nodeType": "YulBlock",
													"src": "1835:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1857:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:10"
																		},
																		"nativeSrc": "1853:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1869:23:10",
																		"nodeType": "YulLiteral",
																		"src": "1869:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:10"
																},
																"nativeSrc": "1846:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1846:47:10"
															},
															"nativeSrc": "1846:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1846:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1729:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1827:6:10",
														"nodeType": "YulTypedName",
														"src": "1827:6:10",
														"type": ""
													}
												],
												"src": "1729:171:10"
											},
											{
												"body": {
													"nativeSrc": "2052:220:10",
													"nodeType": "YulBlock",
													"src": "2052:220:10",
													"statements": [
														{
															"nativeSrc": "2062:74:10",
															"nodeType": "YulAssignment",
															"src": "2062:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2128:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2128:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2069:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2069:58:10"
																},
																"nativeSrc": "2069:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2069:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2062:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2234:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2145:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2145:88:10"
																},
																"nativeSrc": "2145:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2145:93:10"
															},
															"nativeSrc": "2145:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2145:93:10"
														},
														{
															"nativeSrc": "2247:19:10",
															"nodeType": "YulAssignment",
															"src": "2247:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2258:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2258:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2263:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:10"
																},
																"nativeSrc": "2254:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2254:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2247:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1906:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2040:3:10",
														"nodeType": "YulTypedName",
														"src": "2040:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2048:3:10",
														"nodeType": "YulTypedName",
														"src": "2048:3:10",
														"type": ""
													}
												],
												"src": "1906:366:10"
											},
											{
												"body": {
													"nativeSrc": "2449:248:10",
													"nodeType": "YulBlock",
													"src": "2449:248:10",
													"statements": [
														{
															"nativeSrc": "2459:26:10",
															"nodeType": "YulAssignment",
															"src": "2459:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:10"
																},
																"nativeSrc": "2467:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2459:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2506:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2517:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2517:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:10"
																		},
																		"nativeSrc": "2502:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2525:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2525:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2531:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2521:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:10"
																		},
																		"nativeSrc": "2521:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2521:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:10"
																},
																"nativeSrc": "2495:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2495:47:10"
															},
															"nativeSrc": "2495:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2495:47:10"
														},
														{
															"nativeSrc": "2551:139:10",
															"nodeType": "YulAssignment",
															"src": "2551:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2685:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2685:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2559:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2559:124:10"
																},
																"nativeSrc": "2559:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2559:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2551:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2551:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2278:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2429:9:10",
														"nodeType": "YulTypedName",
														"src": "2429:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2444:4:10",
														"nodeType": "YulTypedName",
														"src": "2444:4:10",
														"type": ""
													}
												],
												"src": "2278:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b5060405161138738038061138783398181016040528101906100319190610280565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102ba565b60405180910390fd5b6100b18161016160201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061032d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061034b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61024f82610226565b9050919050565b61025f81610245565b8114610269575f5ffd5b50565b5f8151905061027a81610256565b92915050565b5f6020828403121561029557610294610222565b5b5f6102a28482850161026c565b91505092915050565b6102b481610245565b82525050565b5f6020820190506102cd5f8301846102ab565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103176015836102d3565b9150610322826102e3565b602082019050919050565b5f6020820190508181035f8301526103448161030b565b9050919050565b60805161100861037f5f395f8181610298015281816103aa015281816104d70152818161060a01526106b701526110085ff3fe608060405260043610610094575f3560e01c8063a8a65a7811610058578063a8a65a78146101a6578063b88a802f146101ce578063dd49756e146101e4578063f2fde38b1461020c578063f7b2a7be14610234576100d4565b8063715018a6146100d857806373b2e80e146100ee5780638980f11f1461012a5780638c70d452146101525780638da5cb5b1461017c576100d4565b366100d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cb90610b5d565b60405180910390fd5b5f5ffd5b3480156100e3575f5ffd5b506100ec61025e565b005b3480156100f9575f5ffd5b50610114600480360381019061010f9190610bd9565b610271565b6040516101219190610c1e565b60405180910390f35b348015610135575f5ffd5b50610150600480360381019061014b9190610c6a565b61028e565b005b34801561015d575f5ffd5b506101666103a8565b6040516101739190610d03565b60405180910390f35b348015610187575f5ffd5b506101906103cc565b60405161019d9190610d2b565b60405180910390f35b3480156101b1575f5ffd5b506101cc60048036038101906101c79190610d44565b6103f3565b005b3480156101d9575f5ffd5b506101e261043c565b005b3480156101ef575f5ffd5b5061020a60048036038101906102059190610d44565b6106a7565b005b348015610217575f5ffd5b50610232600480360381019061022d9190610bd9565b610736565b005b34801561023f575f5ffd5b506102486107ba565b6040516102559190610d7e565b60405180910390f35b6102666107c0565b61026f5f610847565b565b6003602052805f5260405f205f915054906101000a900460ff1681565b6102966107c0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031b90610de1565b60405180910390fd5b61035661032f6103cc565b828473ffffffffffffffffffffffffffffffffffffffff166109089092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f46d2e6e71fc567877b817ff3d940571f989d4ee4d40f2b70806d36e738feef6f8260405161039c9190610d7e565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103fb6107c0565b806002819055507f9639dea65e74b72b1b86ccf3e4f9b6d23b88d2aad2f103d0b3afe394e67edade816040516104319190610d7e565b60405180910390a150565b610444610987565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590610e49565b60405180910390fd5b5f6002549050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052e9190610d2b565b602060405180830381865afa158015610549573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056d9190610e7b565b10156105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610ef0565b60405180910390fd5b600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061064e33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109089092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516106949190610d7e565b60405180910390a2506106a56109d6565b565b6106af6107c0565b6106fc3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109df909392919063ffffffff16565b7f77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d18160405161072b9190610d7e565b60405180910390a150565b61073e6107c0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107a59190610d2b565b60405180910390fd5b6107b781610847565b50565b60025481565b6107c8610a61565b73ffffffffffffffffffffffffffffffffffffffff166107e66103cc565b73ffffffffffffffffffffffffffffffffffffffff161461084557610809610a61565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161083c9190610d2b565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610982838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161093b929190610f0e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a68565b505050565b6002600154036109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390610f7f565b60405180910390fd5b6002600181905550565b60018081905550565b610a5b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610a1493929190610f9d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a68565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180610a87576040513d5f823e3d81fd5b3d92505f519150505f8214610aa0576001811415610abb565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610afd57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610af49190610d2b565b60405180910390fd5b50505050565b5f82825260208201905092915050565b7f436f6e747261637420646f6573206e6f742061636365707420455448000000005f82015250565b5f610b47601c83610b03565b9150610b5282610b13565b602082019050919050565b5f6020820190508181035f830152610b7481610b3b565b9050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ba882610b7f565b9050919050565b610bb881610b9e565b8114610bc2575f5ffd5b50565b5f81359050610bd381610baf565b92915050565b5f60208284031215610bee57610bed610b7b565b5b5f610bfb84828501610bc5565b91505092915050565b5f8115159050919050565b610c1881610c04565b82525050565b5f602082019050610c315f830184610c0f565b92915050565b5f819050919050565b610c4981610c37565b8114610c53575f5ffd5b50565b5f81359050610c6481610c40565b92915050565b5f5f60408385031215610c8057610c7f610b7b565b5b5f610c8d85828601610bc5565b9250506020610c9e85828601610c56565b9150509250929050565b5f819050919050565b5f610ccb610cc6610cc184610b7f565b610ca8565b610b7f565b9050919050565b5f610cdc82610cb1565b9050919050565b5f610ced82610cd2565b9050919050565b610cfd81610ce3565b82525050565b5f602082019050610d165f830184610cf4565b92915050565b610d2581610b9e565b82525050565b5f602082019050610d3e5f830184610d1c565b92915050565b5f60208284031215610d5957610d58610b7b565b5b5f610d6684828501610c56565b91505092915050565b610d7881610c37565b82525050565b5f602082019050610d915f830184610d6f565b92915050565b7f43616e6e6f74207265636f76657220686162697420746f6b656e0000000000005f82015250565b5f610dcb601a83610b03565b9150610dd682610d97565b602082019050919050565b5f6020820190508181035f830152610df881610dbf565b9050919050565b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f610e33600f83610b03565b9150610e3e82610dff565b602082019050919050565b5f6020820190508181035f830152610e6081610e27565b9050919050565b5f81519050610e7581610c40565b92915050565b5f60208284031215610e9057610e8f610b7b565b5b5f610e9d84828501610e67565b91505092915050565b7f496e73756666696369656e7420746f6b656e73000000000000000000000000005f82015250565b5f610eda601383610b03565b9150610ee582610ea6565b602082019050919050565b5f6020820190508181035f830152610f0781610ece565b9050919050565b5f604082019050610f215f830185610d1c565b610f2e6020830184610d6f565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610f69601f83610b03565b9150610f7482610f35565b602082019050919050565b5f6020820190508181035f830152610f9681610f5d565b9050919050565b5f606082019050610fb05f830186610d1c565b610fbd6020830185610d1c565b610fca6040830184610d6f565b94935050505056fea2646970667358221220273c4081066474e69f851888ffe1134d7dc4d85426babdc87c4ed314476d38e364736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1387 CODESIZE SUB DUP1 PUSH2 0x1387 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x280 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x161 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x34B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24F DUP3 PUSH2 0x226 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x245 JUMP JUMPDEST DUP2 EQ PUSH2 0x269 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27A DUP2 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH2 0x294 PUSH2 0x222 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A2 DUP5 DUP3 DUP6 ADD PUSH2 0x26C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B4 DUP2 PUSH2 0x245 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD PUSH0 DUP4 ADD DUP5 PUSH2 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x317 PUSH1 0x15 DUP4 PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x322 DUP3 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x344 DUP2 PUSH2 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1008 PUSH2 0x37F PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x298 ADD MSTORE DUP2 DUP2 PUSH2 0x3AA ADD MSTORE DUP2 DUP2 PUSH2 0x4D7 ADD MSTORE DUP2 DUP2 PUSH2 0x60A ADD MSTORE PUSH2 0x6B7 ADD MSTORE PUSH2 0x1008 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8A65A78 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA8A65A78 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x234 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8C70D452 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI PUSH2 0xD4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x25E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x43C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x26F PUSH0 PUSH2 0x847 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x7C0 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B SWAP1 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x356 PUSH2 0x32F PUSH2 0x3CC JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x908 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46D2E6E71FC567877B817FF3D940571F989D4EE4D40F2B70806D36E738FEEF6F DUP3 PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x7C0 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x9639DEA65E74B72B1B86CCF3E4F9B6D23B88D2AAD2F103D0B3AFE394E67EDADE DUP2 PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x444 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST LT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x64E CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x908 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6A5 PUSH2 0x9D6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6AF PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x6FC CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x77ACF75E237F9AAE98F997395832D522BDB695E4A9BD07704936AA889A3667D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x73E PUSH2 0x7C0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B7 DUP2 PUSH2 0x847 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xA61 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E6 PUSH2 0x3CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x845 JUMPI PUSH2 0x809 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x982 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x93B SWAP3 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA5B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA14 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAA0 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xABB JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xAFD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F6573206E6F74206163636570742045544800000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB47 PUSH1 0x1C DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xB52 DUP3 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB74 DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBA8 DUP3 PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEE JUMPI PUSH2 0xBED PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFB DUP5 DUP3 DUP6 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC18 DUP2 PUSH2 0xC04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC31 PUSH0 DUP4 ADD DUP5 PUSH2 0xC0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC49 DUP2 PUSH2 0xC37 JUMP JUMPDEST DUP2 EQ PUSH2 0xC53 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC64 DUP2 PUSH2 0xC40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC8D DUP6 DUP3 DUP7 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC9E DUP6 DUP3 DUP7 ADD PUSH2 0xC56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCCB PUSH2 0xCC6 PUSH2 0xCC1 DUP5 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCDC DUP3 PUSH2 0xCB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCED DUP3 PUSH2 0xCD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFD DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD16 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3E PUSH0 DUP4 ADD DUP5 PUSH2 0xD1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD66 DUP5 DUP3 DUP6 ADD PUSH2 0xC56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0xC37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207265636F76657220686162697420746F6B656E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDCB PUSH1 0x1A DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD6 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF8 DUP2 PUSH2 0xDBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE33 PUSH1 0xF DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE60 DUP2 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE75 DUP2 PUSH2 0xC40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE8F PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE9D DUP5 DUP3 DUP6 ADD PUSH2 0xE67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E7300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEDA PUSH1 0x13 DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE5 DUP3 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF07 DUP2 PUSH2 0xECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF21 PUSH0 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF69 PUSH1 0x1F DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xF74 DUP3 PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF96 DUP2 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFB0 PUSH0 DUP4 ADD DUP7 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xFBD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xFCA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 EXTCODECOPY BLOCKHASH DUP2 MOD PUSH5 0x74E69F8518 DUP9 SELFDESTRUCT RJUMPI 0x134D PUSH30 0xC4D85426BABDC87C4ED314476D38E364736F6C634300081E003300000000 ",
							"sourceMap": "306:1877:9:-:0;;;754:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;795:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;867:1:9::2;844:25;;:11;:25;;::::0;836:59:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;926:11;906:32;;;;;;;;::::0;::::2;754:192:::0;306:1877;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:171::-;1869:23;1865:1;1857:6;1853:14;1846:47;1729:171;:::o;1906:366::-;2048:3;2069:67;2133:2;2128:3;2069:67;:::i;:::-;2062:74;;2145:93;2234:3;2145:93;:::i;:::-;2263:2;2258:3;2254:12;2247:19;;1906:366;;;:::o;2278:419::-;2444:4;2482:2;2471:9;2467:18;2459:26;;2531:9;2525:4;2521:20;2517:1;2506:9;2502:17;2495:47;2559:131;2685:4;2559:131;:::i;:::-;2551:139;;2278:419;;;:::o;306:1877:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1092": {
									"entryPoint": null,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 2664,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1984,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 2657,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 2518,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2439,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2119,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_1026": {
									"entryPoint": 1084,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositTokens_1050": {
									"entryPoint": 1703,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@habitToken_903": {
									"entryPoint": 936,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasClaimed_909": {
									"entryPoint": 625,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 972,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverERC20_1084": {
									"entryPoint": 654,
									"id": 1084,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 606,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_905": {
									"entryPoint": 1978,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 2527,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 2312,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRewardAmount_973": {
									"entryPoint": 1011,
									"id": 973,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1846,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10739:10",
										"nodeType": "YulBlock",
										"src": "0:10739:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:10",
													"nodeType": "YulBlock",
													"src": "103:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:10"
																},
																"nativeSrc": "113:19:10",
																"nodeType": "YulFunctionCall",
																"src": "113:19:10"
															},
															"nativeSrc": "113:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:10"
														},
														{
															"nativeSrc": "141:29:10",
															"nodeType": "YulAssignment",
															"src": "141:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:10",
																		"nodeType": "YulLiteral",
																		"src": "165:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:10"
																},
																"nativeSrc": "156:14:10",
																"nodeType": "YulFunctionCall",
																"src": "156:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:10",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:10",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:10",
														"nodeType": "YulTypedName",
														"src": "91:11:10",
														"type": ""
													}
												],
												"src": "7:169:10"
											},
											{
												"body": {
													"nativeSrc": "288:72:10",
													"nodeType": "YulBlock",
													"src": "288:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:10",
																				"nodeType": "YulLiteral",
																				"src": "318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:10"
																		},
																		"nativeSrc": "306:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:10"
																	},
																	{
																		"hexValue": "436f6e747261637420646f6573206e6f742061636365707420455448",
																		"kind": "string",
																		"nativeSrc": "322:30:10",
																		"nodeType": "YulLiteral",
																		"src": "322:30:10",
																		"type": "",
																		"value": "Contract does not accept ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nativeSrc": "299:54:10",
																"nodeType": "YulFunctionCall",
																"src": "299:54:10"
															},
															"nativeSrc": "299:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "299:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212",
												"nativeSrc": "182:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:10",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"src": "182:178:10"
											},
											{
												"body": {
													"nativeSrc": "512:220:10",
													"nodeType": "YulBlock",
													"src": "512:220:10",
													"statements": [
														{
															"nativeSrc": "522:74:10",
															"nodeType": "YulAssignment",
															"src": "522:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "588:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "588:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "593:2:10",
																		"nodeType": "YulLiteral",
																		"src": "593:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "529:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "529:58:10"
																},
																"nativeSrc": "529:67:10",
																"nodeType": "YulFunctionCall",
																"src": "529:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "522:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "694:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "694:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212",
																	"nativeSrc": "605:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "605:88:10"
																},
																"nativeSrc": "605:93:10",
																"nodeType": "YulFunctionCall",
																"src": "605:93:10"
															},
															"nativeSrc": "605:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "605:93:10"
														},
														{
															"nativeSrc": "707:19:10",
															"nodeType": "YulAssignment",
															"src": "707:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "718:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "718:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "714:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "714:3:10"
																},
																"nativeSrc": "714:12:10",
																"nodeType": "YulFunctionCall",
																"src": "714:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "707:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "707:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "366:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "500:3:10",
														"nodeType": "YulTypedName",
														"src": "500:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "508:3:10",
														"nodeType": "YulTypedName",
														"src": "508:3:10",
														"type": ""
													}
												],
												"src": "366:366:10"
											},
											{
												"body": {
													"nativeSrc": "909:248:10",
													"nodeType": "YulBlock",
													"src": "909:248:10",
													"statements": [
														{
															"nativeSrc": "919:26:10",
															"nodeType": "YulAssignment",
															"src": "919:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "931:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "931:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "942:2:10",
																		"nodeType": "YulLiteral",
																		"src": "942:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "927:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "927:3:10"
																},
																"nativeSrc": "927:18:10",
																"nodeType": "YulFunctionCall",
																"src": "927:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "919:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "919:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:1:10",
																				"nodeType": "YulLiteral",
																				"src": "977:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:10"
																		},
																		"nativeSrc": "962:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "962:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "985:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "985:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "991:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "991:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "981:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:10"
																		},
																		"nativeSrc": "981:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "981:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:10"
																},
																"nativeSrc": "955:47:10",
																"nodeType": "YulFunctionCall",
																"src": "955:47:10"
															},
															"nativeSrc": "955:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "955:47:10"
														},
														{
															"nativeSrc": "1011:139:10",
															"nodeType": "YulAssignment",
															"src": "1011:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1145:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1145:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1019:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "1019:124:10"
																},
																"nativeSrc": "1019:131:10",
																"nodeType": "YulFunctionCall",
																"src": "1019:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1011:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "738:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "889:9:10",
														"nodeType": "YulTypedName",
														"src": "889:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "904:4:10",
														"nodeType": "YulTypedName",
														"src": "904:4:10",
														"type": ""
													}
												],
												"src": "738:419:10"
											},
											{
												"body": {
													"nativeSrc": "1203:35:10",
													"nodeType": "YulBlock",
													"src": "1203:35:10",
													"statements": [
														{
															"nativeSrc": "1213:19:10",
															"nodeType": "YulAssignment",
															"src": "1213:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1229:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1223:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1223:5:10"
																},
																"nativeSrc": "1223:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1223:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1213:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1213:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1163:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1196:6:10",
														"nodeType": "YulTypedName",
														"src": "1196:6:10",
														"type": ""
													}
												],
												"src": "1163:75:10"
											},
											{
												"body": {
													"nativeSrc": "1333:28:10",
													"nodeType": "YulBlock",
													"src": "1333:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1350:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1350:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1353:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1353:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1343:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:10"
																},
																"nativeSrc": "1343:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1343:12:10"
															},
															"nativeSrc": "1343:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1343:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1244:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1244:117:10"
											},
											{
												"body": {
													"nativeSrc": "1456:28:10",
													"nodeType": "YulBlock",
													"src": "1456:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1476:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:10"
																},
																"nativeSrc": "1466:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1466:12:10"
															},
															"nativeSrc": "1466:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1466:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1367:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1367:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:81:10",
													"nodeType": "YulBlock",
													"src": "1535:81:10",
													"statements": [
														{
															"nativeSrc": "1545:65:10",
															"nodeType": "YulAssignment",
															"src": "1545:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1560:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1560:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1567:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1567:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1556:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:10"
																},
																"nativeSrc": "1556:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1556:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1545:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1490:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1517:5:10",
														"nodeType": "YulTypedName",
														"src": "1517:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1527:7:10",
														"nodeType": "YulTypedName",
														"src": "1527:7:10",
														"type": ""
													}
												],
												"src": "1490:126:10"
											},
											{
												"body": {
													"nativeSrc": "1667:51:10",
													"nodeType": "YulBlock",
													"src": "1667:51:10",
													"statements": [
														{
															"nativeSrc": "1677:35:10",
															"nodeType": "YulAssignment",
															"src": "1677:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1706:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1706:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1688:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1688:17:10"
																},
																"nativeSrc": "1688:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1688:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1677:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1677:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1622:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1649:5:10",
														"nodeType": "YulTypedName",
														"src": "1649:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1659:7:10",
														"nodeType": "YulTypedName",
														"src": "1659:7:10",
														"type": ""
													}
												],
												"src": "1622:96:10"
											},
											{
												"body": {
													"nativeSrc": "1767:79:10",
													"nodeType": "YulBlock",
													"src": "1767:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1824:16:10",
																"nodeType": "YulBlock",
																"src": "1824:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1833:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1836:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1836:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1826:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1826:6:10"
																			},
																			"nativeSrc": "1826:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1826:12:10"
																		},
																		"nativeSrc": "1826:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1826:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1790:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1790:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1815:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1815:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1797:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1797:17:10"
																				},
																				"nativeSrc": "1797:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1797:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1787:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1787:2:10"
																		},
																		"nativeSrc": "1787:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:10"
																},
																"nativeSrc": "1780:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1780:43:10"
															},
															"nativeSrc": "1777:63:10",
															"nodeType": "YulIf",
															"src": "1777:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1724:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:10",
														"nodeType": "YulTypedName",
														"src": "1760:5:10",
														"type": ""
													}
												],
												"src": "1724:122:10"
											},
											{
												"body": {
													"nativeSrc": "1904:87:10",
													"nodeType": "YulBlock",
													"src": "1904:87:10",
													"statements": [
														{
															"nativeSrc": "1914:29:10",
															"nodeType": "YulAssignment",
															"src": "1914:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1936:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1936:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1923:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1923:12:10"
																},
																"nativeSrc": "1923:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1923:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1914:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1914:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1979:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1979:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1952:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1952:26:10"
																},
																"nativeSrc": "1952:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1952:33:10"
															},
															"nativeSrc": "1952:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1952:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1852:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1882:6:10",
														"nodeType": "YulTypedName",
														"src": "1882:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1890:3:10",
														"nodeType": "YulTypedName",
														"src": "1890:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"src": "1852:139:10"
											},
											{
												"body": {
													"nativeSrc": "2063:263:10",
													"nodeType": "YulBlock",
													"src": "2063:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2109:83:10",
																"nodeType": "YulBlock",
																"src": "2109:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2111:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2111:77:10"
																			},
																			"nativeSrc": "2111:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2111:79:10"
																		},
																		"nativeSrc": "2111:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2111:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2084:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2084:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2093:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2093:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2080:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2080:3:10"
																		},
																		"nativeSrc": "2080:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2105:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2076:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2076:3:10"
																},
																"nativeSrc": "2076:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2076:32:10"
															},
															"nativeSrc": "2073:119:10",
															"nodeType": "YulIf",
															"src": "2073:119:10"
														},
														{
															"nativeSrc": "2202:117:10",
															"nodeType": "YulBlock",
															"src": "2202:117:10",
															"statements": [
																{
																	"nativeSrc": "2217:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2217:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2231:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2231:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2221:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2221:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2246:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2246:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2281:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2281:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2292:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2292:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2277:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2277:3:10"
																				},
																				"nativeSrc": "2277:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2277:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2301:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2301:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2256:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2256:20:10"
																		},
																		"nativeSrc": "2256:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2256:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2246:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2246:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1997:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2033:9:10",
														"nodeType": "YulTypedName",
														"src": "2033:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2044:7:10",
														"nodeType": "YulTypedName",
														"src": "2044:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2056:6:10",
														"nodeType": "YulTypedName",
														"src": "2056:6:10",
														"type": ""
													}
												],
												"src": "1997:329:10"
											},
											{
												"body": {
													"nativeSrc": "2374:48:10",
													"nodeType": "YulBlock",
													"src": "2374:48:10",
													"statements": [
														{
															"nativeSrc": "2384:32:10",
															"nodeType": "YulAssignment",
															"src": "2384:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2409:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2409:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2402:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2402:6:10"
																		},
																		"nativeSrc": "2402:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2402:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2395:6:10"
																},
																"nativeSrc": "2395:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2395:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2384:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2384:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2332:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2356:5:10",
														"nodeType": "YulTypedName",
														"src": "2356:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2366:7:10",
														"nodeType": "YulTypedName",
														"src": "2366:7:10",
														"type": ""
													}
												],
												"src": "2332:90:10"
											},
											{
												"body": {
													"nativeSrc": "2487:50:10",
													"nodeType": "YulBlock",
													"src": "2487:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2504:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2524:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2524:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2509:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "2509:14:10"
																		},
																		"nativeSrc": "2509:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:10"
																},
																"nativeSrc": "2497:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2497:34:10"
															},
															"nativeSrc": "2497:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2497:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2428:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2475:5:10",
														"nodeType": "YulTypedName",
														"src": "2475:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2482:3:10",
														"nodeType": "YulTypedName",
														"src": "2482:3:10",
														"type": ""
													}
												],
												"src": "2428:109:10"
											},
											{
												"body": {
													"nativeSrc": "2635:118:10",
													"nodeType": "YulBlock",
													"src": "2635:118:10",
													"statements": [
														{
															"nativeSrc": "2645:26:10",
															"nodeType": "YulAssignment",
															"src": "2645:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2657:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2657:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2668:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2653:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:10"
																},
																"nativeSrc": "2653:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2653:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2645:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2645:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2719:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2732:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2732:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2743:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2743:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2728:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:10"
																		},
																		"nativeSrc": "2728:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2728:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2681:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "2681:37:10"
																},
																"nativeSrc": "2681:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2681:65:10"
															},
															"nativeSrc": "2681:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2681:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2543:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2607:9:10",
														"nodeType": "YulTypedName",
														"src": "2607:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2619:6:10",
														"nodeType": "YulTypedName",
														"src": "2619:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2630:4:10",
														"nodeType": "YulTypedName",
														"src": "2630:4:10",
														"type": ""
													}
												],
												"src": "2543:210:10"
											},
											{
												"body": {
													"nativeSrc": "2804:32:10",
													"nodeType": "YulBlock",
													"src": "2804:32:10",
													"statements": [
														{
															"nativeSrc": "2814:16:10",
															"nodeType": "YulAssignment",
															"src": "2814:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2825:5:10",
																"nodeType": "YulIdentifier",
																"src": "2825:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2814:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2814:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2759:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2786:5:10",
														"nodeType": "YulTypedName",
														"src": "2786:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2796:7:10",
														"nodeType": "YulTypedName",
														"src": "2796:7:10",
														"type": ""
													}
												],
												"src": "2759:77:10"
											},
											{
												"body": {
													"nativeSrc": "2885:79:10",
													"nodeType": "YulBlock",
													"src": "2885:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2942:16:10",
																"nodeType": "YulBlock",
																"src": "2942:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2951:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2951:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2954:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2954:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2944:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2944:6:10"
																			},
																			"nativeSrc": "2944:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2944:12:10"
																		},
																		"nativeSrc": "2944:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2944:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2908:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2908:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2933:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2933:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2915:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2915:17:10"
																				},
																				"nativeSrc": "2915:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2915:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2905:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2905:2:10"
																		},
																		"nativeSrc": "2905:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2898:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:10"
																},
																"nativeSrc": "2898:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2898:43:10"
															},
															"nativeSrc": "2895:63:10",
															"nodeType": "YulIf",
															"src": "2895:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2842:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2878:5:10",
														"nodeType": "YulTypedName",
														"src": "2878:5:10",
														"type": ""
													}
												],
												"src": "2842:122:10"
											},
											{
												"body": {
													"nativeSrc": "3022:87:10",
													"nodeType": "YulBlock",
													"src": "3022:87:10",
													"statements": [
														{
															"nativeSrc": "3032:29:10",
															"nodeType": "YulAssignment",
															"src": "3032:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3054:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3054:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3041:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3041:12:10"
																},
																"nativeSrc": "3041:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3041:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3032:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3032:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3097:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3097:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3070:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3070:26:10"
																},
																"nativeSrc": "3070:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3070:33:10"
															},
															"nativeSrc": "3070:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3070:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2970:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3000:6:10",
														"nodeType": "YulTypedName",
														"src": "3000:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3008:3:10",
														"nodeType": "YulTypedName",
														"src": "3008:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3016:5:10",
														"nodeType": "YulTypedName",
														"src": "3016:5:10",
														"type": ""
													}
												],
												"src": "2970:139:10"
											},
											{
												"body": {
													"nativeSrc": "3198:391:10",
													"nodeType": "YulBlock",
													"src": "3198:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3244:83:10",
																"nodeType": "YulBlock",
																"src": "3244:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3246:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3246:77:10"
																			},
																			"nativeSrc": "3246:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3246:79:10"
																		},
																		"nativeSrc": "3246:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3246:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3219:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3219:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3228:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:10"
																		},
																		"nativeSrc": "3215:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3240:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3240:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3211:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3211:3:10"
																},
																"nativeSrc": "3211:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3211:32:10"
															},
															"nativeSrc": "3208:119:10",
															"nodeType": "YulIf",
															"src": "3208:119:10"
														},
														{
															"nativeSrc": "3337:117:10",
															"nodeType": "YulBlock",
															"src": "3337:117:10",
															"statements": [
																{
																	"nativeSrc": "3352:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3352:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3366:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3366:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3356:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3356:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3381:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3381:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3416:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3416:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3427:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3427:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3412:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3412:3:10"
																				},
																				"nativeSrc": "3412:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3412:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3436:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3436:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3391:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3391:20:10"
																		},
																		"nativeSrc": "3391:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3381:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3381:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3464:118:10",
															"nodeType": "YulBlock",
															"src": "3464:118:10",
															"statements": [
																{
																	"nativeSrc": "3479:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3479:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3493:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3493:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3483:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3483:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3509:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3509:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3544:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3544:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3555:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3555:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3540:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3540:3:10"
																				},
																				"nativeSrc": "3540:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3540:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3564:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3564:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3519:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3519:20:10"
																		},
																		"nativeSrc": "3519:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3519:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3509:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3509:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3115:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3160:9:10",
														"nodeType": "YulTypedName",
														"src": "3160:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3171:7:10",
														"nodeType": "YulTypedName",
														"src": "3171:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3183:6:10",
														"nodeType": "YulTypedName",
														"src": "3183:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3191:6:10",
														"nodeType": "YulTypedName",
														"src": "3191:6:10",
														"type": ""
													}
												],
												"src": "3115:474:10"
											},
											{
												"body": {
													"nativeSrc": "3627:28:10",
													"nodeType": "YulBlock",
													"src": "3627:28:10",
													"statements": [
														{
															"nativeSrc": "3637:12:10",
															"nodeType": "YulAssignment",
															"src": "3637:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3644:5:10",
																"nodeType": "YulIdentifier",
																"src": "3644:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3637:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3595:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3613:5:10",
														"nodeType": "YulTypedName",
														"src": "3613:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3623:3:10",
														"nodeType": "YulTypedName",
														"src": "3623:3:10",
														"type": ""
													}
												],
												"src": "3595:60:10"
											},
											{
												"body": {
													"nativeSrc": "3721:82:10",
													"nodeType": "YulBlock",
													"src": "3721:82:10",
													"statements": [
														{
															"nativeSrc": "3731:66:10",
															"nodeType": "YulAssignment",
															"src": "3731:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3789:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3789:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3771:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3771:17:10"
																				},
																				"nativeSrc": "3771:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3771:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3762:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "3762:8:10"
																		},
																		"nativeSrc": "3762:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3762:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3744:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3744:17:10"
																},
																"nativeSrc": "3744:53:10",
																"nodeType": "YulFunctionCall",
																"src": "3744:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3731:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3731:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3661:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3701:5:10",
														"nodeType": "YulTypedName",
														"src": "3701:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3711:9:10",
														"nodeType": "YulTypedName",
														"src": "3711:9:10",
														"type": ""
													}
												],
												"src": "3661:142:10"
											},
											{
												"body": {
													"nativeSrc": "3869:66:10",
													"nodeType": "YulBlock",
													"src": "3869:66:10",
													"statements": [
														{
															"nativeSrc": "3879:50:10",
															"nodeType": "YulAssignment",
															"src": "3879:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3923:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3923:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3892:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3892:30:10"
																},
																"nativeSrc": "3892:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3892:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3879:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3879:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3809:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3849:5:10",
														"nodeType": "YulTypedName",
														"src": "3849:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3859:9:10",
														"nodeType": "YulTypedName",
														"src": "3859:9:10",
														"type": ""
													}
												],
												"src": "3809:126:10"
											},
											{
												"body": {
													"nativeSrc": "4015:66:10",
													"nodeType": "YulBlock",
													"src": "4015:66:10",
													"statements": [
														{
															"nativeSrc": "4025:50:10",
															"nodeType": "YulAssignment",
															"src": "4025:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4069:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4069:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4038:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4038:30:10"
																},
																"nativeSrc": "4038:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4038:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4025:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4025:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "3941:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3995:5:10",
														"nodeType": "YulTypedName",
														"src": "3995:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4005:9:10",
														"nodeType": "YulTypedName",
														"src": "4005:9:10",
														"type": ""
													}
												],
												"src": "3941:140:10"
											},
											{
												"body": {
													"nativeSrc": "4166:80:10",
													"nodeType": "YulBlock",
													"src": "4166:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4183:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4183:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4233:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4233:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "4188:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "4188:44:10"
																		},
																		"nativeSrc": "4188:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4176:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4176:6:10"
																},
																"nativeSrc": "4176:64:10",
																"nodeType": "YulFunctionCall",
																"src": "4176:64:10"
															},
															"nativeSrc": "4176:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "4176:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "4087:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4154:5:10",
														"nodeType": "YulTypedName",
														"src": "4154:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4161:3:10",
														"nodeType": "YulTypedName",
														"src": "4161:3:10",
														"type": ""
													}
												],
												"src": "4087:159:10"
											},
											{
												"body": {
													"nativeSrc": "4364:138:10",
													"nodeType": "YulBlock",
													"src": "4364:138:10",
													"statements": [
														{
															"nativeSrc": "4374:26:10",
															"nodeType": "YulAssignment",
															"src": "4374:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4386:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4386:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4397:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4382:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4382:3:10"
																},
																"nativeSrc": "4382:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4382:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4374:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4374:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4468:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4481:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4481:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4492:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4492:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4477:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4477:3:10"
																		},
																		"nativeSrc": "4477:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4477:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "4410:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "4410:57:10"
																},
																"nativeSrc": "4410:85:10",
																"nodeType": "YulFunctionCall",
																"src": "4410:85:10"
															},
															"nativeSrc": "4410:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "4410:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "4252:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4336:9:10",
														"nodeType": "YulTypedName",
														"src": "4336:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4348:6:10",
														"nodeType": "YulTypedName",
														"src": "4348:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4359:4:10",
														"nodeType": "YulTypedName",
														"src": "4359:4:10",
														"type": ""
													}
												],
												"src": "4252:250:10"
											},
											{
												"body": {
													"nativeSrc": "4573:53:10",
													"nodeType": "YulBlock",
													"src": "4573:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4590:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4590:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4613:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4613:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4595:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4595:17:10"
																		},
																		"nativeSrc": "4595:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4595:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4583:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4583:6:10"
																},
																"nativeSrc": "4583:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4583:37:10"
															},
															"nativeSrc": "4583:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4583:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4508:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4561:5:10",
														"nodeType": "YulTypedName",
														"src": "4561:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4568:3:10",
														"nodeType": "YulTypedName",
														"src": "4568:3:10",
														"type": ""
													}
												],
												"src": "4508:118:10"
											},
											{
												"body": {
													"nativeSrc": "4730:124:10",
													"nodeType": "YulBlock",
													"src": "4730:124:10",
													"statements": [
														{
															"nativeSrc": "4740:26:10",
															"nodeType": "YulAssignment",
															"src": "4740:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4752:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4752:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4763:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4763:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4748:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4748:3:10"
																},
																"nativeSrc": "4748:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4748:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4740:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4740:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4820:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4833:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4833:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4844:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4844:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4829:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:10"
																		},
																		"nativeSrc": "4829:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4776:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4776:43:10"
																},
																"nativeSrc": "4776:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4776:71:10"
															},
															"nativeSrc": "4776:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4776:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4632:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4702:9:10",
														"nodeType": "YulTypedName",
														"src": "4702:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4714:6:10",
														"nodeType": "YulTypedName",
														"src": "4714:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4725:4:10",
														"nodeType": "YulTypedName",
														"src": "4725:4:10",
														"type": ""
													}
												],
												"src": "4632:222:10"
											},
											{
												"body": {
													"nativeSrc": "4926:263:10",
													"nodeType": "YulBlock",
													"src": "4926:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4972:83:10",
																"nodeType": "YulBlock",
																"src": "4972:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4974:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4974:77:10"
																			},
																			"nativeSrc": "4974:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4974:79:10"
																		},
																		"nativeSrc": "4974:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4974:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4947:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4947:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4956:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4956:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4943:3:10"
																		},
																		"nativeSrc": "4943:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4943:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4968:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4968:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4939:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:10"
																},
																"nativeSrc": "4939:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4939:32:10"
															},
															"nativeSrc": "4936:119:10",
															"nodeType": "YulIf",
															"src": "4936:119:10"
														},
														{
															"nativeSrc": "5065:117:10",
															"nodeType": "YulBlock",
															"src": "5065:117:10",
															"statements": [
																{
																	"nativeSrc": "5080:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5080:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5094:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5094:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5084:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5084:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5109:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5109:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5144:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5144:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5155:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5155:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5140:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5140:3:10"
																				},
																				"nativeSrc": "5140:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5140:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5164:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5164:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5119:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5119:20:10"
																		},
																		"nativeSrc": "5119:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5119:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5109:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5109:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4860:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4896:9:10",
														"nodeType": "YulTypedName",
														"src": "4896:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4907:7:10",
														"nodeType": "YulTypedName",
														"src": "4907:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4919:6:10",
														"nodeType": "YulTypedName",
														"src": "4919:6:10",
														"type": ""
													}
												],
												"src": "4860:329:10"
											},
											{
												"body": {
													"nativeSrc": "5260:53:10",
													"nodeType": "YulBlock",
													"src": "5260:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5277:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5300:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5300:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5282:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5282:17:10"
																		},
																		"nativeSrc": "5282:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:10"
																},
																"nativeSrc": "5270:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5270:37:10"
															},
															"nativeSrc": "5270:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5270:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5195:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5248:5:10",
														"nodeType": "YulTypedName",
														"src": "5248:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5255:3:10",
														"nodeType": "YulTypedName",
														"src": "5255:3:10",
														"type": ""
													}
												],
												"src": "5195:118:10"
											},
											{
												"body": {
													"nativeSrc": "5417:124:10",
													"nodeType": "YulBlock",
													"src": "5417:124:10",
													"statements": [
														{
															"nativeSrc": "5427:26:10",
															"nodeType": "YulAssignment",
															"src": "5427:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5439:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5439:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5450:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5450:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:10"
																},
																"nativeSrc": "5435:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5435:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5427:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5427:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5507:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5507:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5520:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5520:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5531:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5531:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5516:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:10"
																		},
																		"nativeSrc": "5516:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5463:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5463:43:10"
																},
																"nativeSrc": "5463:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5463:71:10"
															},
															"nativeSrc": "5463:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5463:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5319:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5389:9:10",
														"nodeType": "YulTypedName",
														"src": "5389:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5401:6:10",
														"nodeType": "YulTypedName",
														"src": "5401:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5412:4:10",
														"nodeType": "YulTypedName",
														"src": "5412:4:10",
														"type": ""
													}
												],
												"src": "5319:222:10"
											},
											{
												"body": {
													"nativeSrc": "5653:70:10",
													"nodeType": "YulBlock",
													"src": "5653:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5675:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5675:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5683:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5683:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5671:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:10"
																		},
																		"nativeSrc": "5671:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5671:14:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207265636f76657220686162697420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "5687:28:10",
																		"nodeType": "YulLiteral",
																		"src": "5687:28:10",
																		"type": "",
																		"value": "Cannot recover habit token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5664:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:10"
																},
																"nativeSrc": "5664:52:10",
																"nodeType": "YulFunctionCall",
																"src": "5664:52:10"
															},
															"nativeSrc": "5664:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "5664:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693",
												"nativeSrc": "5547:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5645:6:10",
														"nodeType": "YulTypedName",
														"src": "5645:6:10",
														"type": ""
													}
												],
												"src": "5547:176:10"
											},
											{
												"body": {
													"nativeSrc": "5875:220:10",
													"nodeType": "YulBlock",
													"src": "5875:220:10",
													"statements": [
														{
															"nativeSrc": "5885:74:10",
															"nodeType": "YulAssignment",
															"src": "5885:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5951:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5956:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5956:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5892:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5892:58:10"
																},
																"nativeSrc": "5892:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5892:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5885:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5885:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6057:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6057:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693",
																	"nativeSrc": "5968:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5968:88:10"
																},
																"nativeSrc": "5968:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5968:93:10"
															},
															"nativeSrc": "5968:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5968:93:10"
														},
														{
															"nativeSrc": "6070:19:10",
															"nodeType": "YulAssignment",
															"src": "6070:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6081:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6081:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6086:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6077:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:10"
																},
																"nativeSrc": "6077:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6077:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6070:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5729:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5863:3:10",
														"nodeType": "YulTypedName",
														"src": "5863:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5871:3:10",
														"nodeType": "YulTypedName",
														"src": "5871:3:10",
														"type": ""
													}
												],
												"src": "5729:366:10"
											},
											{
												"body": {
													"nativeSrc": "6272:248:10",
													"nodeType": "YulBlock",
													"src": "6272:248:10",
													"statements": [
														{
															"nativeSrc": "6282:26:10",
															"nodeType": "YulAssignment",
															"src": "6282:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6294:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6294:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6305:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6305:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6290:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:10"
																},
																"nativeSrc": "6290:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6290:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6282:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6282:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6329:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6329:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6340:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6340:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6348:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6348:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6354:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6354:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6344:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:10"
																		},
																		"nativeSrc": "6344:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6344:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6318:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:10"
																},
																"nativeSrc": "6318:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6318:47:10"
															},
															"nativeSrc": "6318:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6318:47:10"
														},
														{
															"nativeSrc": "6374:139:10",
															"nodeType": "YulAssignment",
															"src": "6374:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6508:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6508:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6382:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6382:124:10"
																},
																"nativeSrc": "6382:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6382:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6374:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6374:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6101:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6252:9:10",
														"nodeType": "YulTypedName",
														"src": "6252:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6267:4:10",
														"nodeType": "YulTypedName",
														"src": "6267:4:10",
														"type": ""
													}
												],
												"src": "6101:419:10"
											},
											{
												"body": {
													"nativeSrc": "6632:59:10",
													"nodeType": "YulBlock",
													"src": "6632:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6654:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6654:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6662:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6662:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:10"
																		},
																		"nativeSrc": "6650:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:14:10"
																	},
																	{
																		"hexValue": "416c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "6666:17:10",
																		"nodeType": "YulLiteral",
																		"src": "6666:17:10",
																		"type": "",
																		"value": "Already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:10"
																},
																"nativeSrc": "6643:41:10",
																"nodeType": "YulFunctionCall",
																"src": "6643:41:10"
															},
															"nativeSrc": "6643:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "6643:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
												"nativeSrc": "6526:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6624:6:10",
														"nodeType": "YulTypedName",
														"src": "6624:6:10",
														"type": ""
													}
												],
												"src": "6526:165:10"
											},
											{
												"body": {
													"nativeSrc": "6843:220:10",
													"nodeType": "YulBlock",
													"src": "6843:220:10",
													"statements": [
														{
															"nativeSrc": "6853:74:10",
															"nodeType": "YulAssignment",
															"src": "6853:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6919:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6919:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6924:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6924:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6860:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6860:58:10"
																},
																"nativeSrc": "6860:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6860:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6853:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6853:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7025:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7025:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																	"nativeSrc": "6936:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6936:88:10"
																},
																"nativeSrc": "6936:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6936:93:10"
															},
															"nativeSrc": "6936:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6936:93:10"
														},
														{
															"nativeSrc": "7038:19:10",
															"nodeType": "YulAssignment",
															"src": "7038:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7049:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7049:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7054:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7054:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7045:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:10"
																},
																"nativeSrc": "7045:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7045:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7038:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7038:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6697:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6831:3:10",
														"nodeType": "YulTypedName",
														"src": "6831:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6839:3:10",
														"nodeType": "YulTypedName",
														"src": "6839:3:10",
														"type": ""
													}
												],
												"src": "6697:366:10"
											},
											{
												"body": {
													"nativeSrc": "7240:248:10",
													"nodeType": "YulBlock",
													"src": "7240:248:10",
													"statements": [
														{
															"nativeSrc": "7250:26:10",
															"nodeType": "YulAssignment",
															"src": "7250:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7262:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7258:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:10"
																},
																"nativeSrc": "7258:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7258:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7250:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7297:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7308:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7308:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7293:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7293:3:10"
																		},
																		"nativeSrc": "7293:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7293:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7316:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7316:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7322:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7322:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7312:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7312:3:10"
																		},
																		"nativeSrc": "7312:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7312:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:10"
																},
																"nativeSrc": "7286:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7286:47:10"
															},
															"nativeSrc": "7286:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7286:47:10"
														},
														{
															"nativeSrc": "7342:139:10",
															"nodeType": "YulAssignment",
															"src": "7342:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7476:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7476:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7350:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7350:124:10"
																},
																"nativeSrc": "7350:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7350:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7342:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7342:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7069:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7220:9:10",
														"nodeType": "YulTypedName",
														"src": "7220:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7235:4:10",
														"nodeType": "YulTypedName",
														"src": "7235:4:10",
														"type": ""
													}
												],
												"src": "7069:419:10"
											},
											{
												"body": {
													"nativeSrc": "7557:80:10",
													"nodeType": "YulBlock",
													"src": "7557:80:10",
													"statements": [
														{
															"nativeSrc": "7567:22:10",
															"nodeType": "YulAssignment",
															"src": "7567:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7582:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7582:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7576:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7576:5:10"
																},
																"nativeSrc": "7576:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7576:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7567:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7567:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7625:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7625:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7598:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "7598:26:10"
																},
																"nativeSrc": "7598:33:10",
																"nodeType": "YulFunctionCall",
																"src": "7598:33:10"
															},
															"nativeSrc": "7598:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "7598:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7494:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7535:6:10",
														"nodeType": "YulTypedName",
														"src": "7535:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7543:3:10",
														"nodeType": "YulTypedName",
														"src": "7543:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7551:5:10",
														"nodeType": "YulTypedName",
														"src": "7551:5:10",
														"type": ""
													}
												],
												"src": "7494:143:10"
											},
											{
												"body": {
													"nativeSrc": "7720:274:10",
													"nodeType": "YulBlock",
													"src": "7720:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7766:83:10",
																"nodeType": "YulBlock",
																"src": "7766:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7768:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7768:77:10"
																			},
																			"nativeSrc": "7768:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7768:79:10"
																		},
																		"nativeSrc": "7768:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7741:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7741:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7750:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7750:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7737:3:10"
																		},
																		"nativeSrc": "7737:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7737:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7762:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7733:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:10"
																},
																"nativeSrc": "7733:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7733:32:10"
															},
															"nativeSrc": "7730:119:10",
															"nodeType": "YulIf",
															"src": "7730:119:10"
														},
														{
															"nativeSrc": "7859:128:10",
															"nodeType": "YulBlock",
															"src": "7859:128:10",
															"statements": [
																{
																	"nativeSrc": "7874:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7874:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7888:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7888:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7878:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7878:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7903:74:10",
																	"nodeType": "YulAssignment",
																	"src": "7903:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7949:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7949:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7960:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7960:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7945:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7945:3:10"
																				},
																				"nativeSrc": "7945:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7945:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7969:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7969:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7913:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "7913:31:10"
																		},
																		"nativeSrc": "7913:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7913:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7903:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7903:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7643:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7690:9:10",
														"nodeType": "YulTypedName",
														"src": "7690:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7701:7:10",
														"nodeType": "YulTypedName",
														"src": "7701:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7713:6:10",
														"nodeType": "YulTypedName",
														"src": "7713:6:10",
														"type": ""
													}
												],
												"src": "7643:351:10"
											},
											{
												"body": {
													"nativeSrc": "8106:63:10",
													"nodeType": "YulBlock",
													"src": "8106:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8128:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8128:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8136:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8136:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8124:3:10"
																		},
																		"nativeSrc": "8124:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8124:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "8140:21:10",
																		"nodeType": "YulLiteral",
																		"src": "8140:21:10",
																		"type": "",
																		"value": "Insufficient tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8117:6:10"
																},
																"nativeSrc": "8117:45:10",
																"nodeType": "YulFunctionCall",
																"src": "8117:45:10"
															},
															"nativeSrc": "8117:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "8117:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5",
												"nativeSrc": "8000:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8098:6:10",
														"nodeType": "YulTypedName",
														"src": "8098:6:10",
														"type": ""
													}
												],
												"src": "8000:169:10"
											},
											{
												"body": {
													"nativeSrc": "8321:220:10",
													"nodeType": "YulBlock",
													"src": "8321:220:10",
													"statements": [
														{
															"nativeSrc": "8331:74:10",
															"nodeType": "YulAssignment",
															"src": "8331:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8397:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8402:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8338:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8338:58:10"
																},
																"nativeSrc": "8338:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8338:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8331:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8503:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8503:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5",
																	"nativeSrc": "8414:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8414:88:10"
																},
																"nativeSrc": "8414:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8414:93:10"
															},
															"nativeSrc": "8414:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8414:93:10"
														},
														{
															"nativeSrc": "8516:19:10",
															"nodeType": "YulAssignment",
															"src": "8516:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8527:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8527:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8532:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8523:3:10"
																},
																"nativeSrc": "8523:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8523:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8516:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8175:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8309:3:10",
														"nodeType": "YulTypedName",
														"src": "8309:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8317:3:10",
														"nodeType": "YulTypedName",
														"src": "8317:3:10",
														"type": ""
													}
												],
												"src": "8175:366:10"
											},
											{
												"body": {
													"nativeSrc": "8718:248:10",
													"nodeType": "YulBlock",
													"src": "8718:248:10",
													"statements": [
														{
															"nativeSrc": "8728:26:10",
															"nodeType": "YulAssignment",
															"src": "8728:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8740:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8740:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8751:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8751:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8736:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8736:3:10"
																},
																"nativeSrc": "8736:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8736:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8728:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8728:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8775:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8775:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8786:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8786:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8771:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:10"
																		},
																		"nativeSrc": "8771:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8771:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8794:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8794:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8800:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8800:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8790:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8790:3:10"
																		},
																		"nativeSrc": "8790:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8790:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8764:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:10"
																},
																"nativeSrc": "8764:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8764:47:10"
															},
															"nativeSrc": "8764:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8764:47:10"
														},
														{
															"nativeSrc": "8820:139:10",
															"nodeType": "YulAssignment",
															"src": "8820:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8954:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8954:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8828:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8828:124:10"
																},
																"nativeSrc": "8828:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8828:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8820:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8820:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8547:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8698:9:10",
														"nodeType": "YulTypedName",
														"src": "8698:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8713:4:10",
														"nodeType": "YulTypedName",
														"src": "8713:4:10",
														"type": ""
													}
												],
												"src": "8547:419:10"
											},
											{
												"body": {
													"nativeSrc": "9098:206:10",
													"nodeType": "YulBlock",
													"src": "9098:206:10",
													"statements": [
														{
															"nativeSrc": "9108:26:10",
															"nodeType": "YulAssignment",
															"src": "9108:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9120:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9120:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9131:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9131:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9116:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9116:3:10"
																},
																"nativeSrc": "9116:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9116:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9108:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9108:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9188:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9188:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9201:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9201:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9212:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9212:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9197:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9197:3:10"
																		},
																		"nativeSrc": "9197:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9197:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9144:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9144:43:10"
																},
																"nativeSrc": "9144:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9144:71:10"
															},
															"nativeSrc": "9144:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9144:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9269:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9269:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9282:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9282:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9293:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9293:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9278:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:10"
																		},
																		"nativeSrc": "9278:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9278:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9225:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9225:43:10"
																},
																"nativeSrc": "9225:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9225:72:10"
															},
															"nativeSrc": "9225:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9225:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8972:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9062:9:10",
														"nodeType": "YulTypedName",
														"src": "9062:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9074:6:10",
														"nodeType": "YulTypedName",
														"src": "9074:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9082:6:10",
														"nodeType": "YulTypedName",
														"src": "9082:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9093:4:10",
														"nodeType": "YulTypedName",
														"src": "9093:4:10",
														"type": ""
													}
												],
												"src": "8972:332:10"
											},
											{
												"body": {
													"nativeSrc": "9416:75:10",
													"nodeType": "YulBlock",
													"src": "9416:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9438:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9438:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9446:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9446:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9434:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:10"
																		},
																		"nativeSrc": "9434:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9450:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9450:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9427:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:10"
																},
																"nativeSrc": "9427:57:10",
																"nodeType": "YulFunctionCall",
																"src": "9427:57:10"
															},
															"nativeSrc": "9427:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "9427:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "9310:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9408:6:10",
														"nodeType": "YulTypedName",
														"src": "9408:6:10",
														"type": ""
													}
												],
												"src": "9310:181:10"
											},
											{
												"body": {
													"nativeSrc": "9643:220:10",
													"nodeType": "YulBlock",
													"src": "9643:220:10",
													"statements": [
														{
															"nativeSrc": "9653:74:10",
															"nodeType": "YulAssignment",
															"src": "9653:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9719:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9719:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9724:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9724:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9660:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9660:58:10"
																},
																"nativeSrc": "9660:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9660:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9653:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9653:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9825:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9825:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "9736:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9736:88:10"
																},
																"nativeSrc": "9736:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9736:93:10"
															},
															"nativeSrc": "9736:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9736:93:10"
														},
														{
															"nativeSrc": "9838:19:10",
															"nodeType": "YulAssignment",
															"src": "9838:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9849:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9849:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9854:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9854:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9845:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9845:3:10"
																},
																"nativeSrc": "9845:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9845:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9838:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9838:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9497:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9631:3:10",
														"nodeType": "YulTypedName",
														"src": "9631:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9639:3:10",
														"nodeType": "YulTypedName",
														"src": "9639:3:10",
														"type": ""
													}
												],
												"src": "9497:366:10"
											},
											{
												"body": {
													"nativeSrc": "10040:248:10",
													"nodeType": "YulBlock",
													"src": "10040:248:10",
													"statements": [
														{
															"nativeSrc": "10050:26:10",
															"nodeType": "YulAssignment",
															"src": "10050:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10062:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10062:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10073:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10073:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10058:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10058:3:10"
																},
																"nativeSrc": "10058:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10058:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10050:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10050:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10097:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10097:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10108:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10108:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10093:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10093:3:10"
																		},
																		"nativeSrc": "10093:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10116:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10116:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10122:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10122:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10112:3:10"
																		},
																		"nativeSrc": "10112:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10112:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10086:6:10"
																},
																"nativeSrc": "10086:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10086:47:10"
															},
															"nativeSrc": "10086:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10086:47:10"
														},
														{
															"nativeSrc": "10142:139:10",
															"nodeType": "YulAssignment",
															"src": "10142:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10276:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10276:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10150:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10150:124:10"
																},
																"nativeSrc": "10150:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10150:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10142:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10142:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9869:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10020:9:10",
														"nodeType": "YulTypedName",
														"src": "10020:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10035:4:10",
														"nodeType": "YulTypedName",
														"src": "10035:4:10",
														"type": ""
													}
												],
												"src": "9869:419:10"
											},
											{
												"body": {
													"nativeSrc": "10448:288:10",
													"nodeType": "YulBlock",
													"src": "10448:288:10",
													"statements": [
														{
															"nativeSrc": "10458:26:10",
															"nodeType": "YulAssignment",
															"src": "10458:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10470:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10481:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10481:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:10"
																},
																"nativeSrc": "10466:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10466:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10458:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10538:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10538:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10551:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10551:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10562:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10562:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10547:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10547:3:10"
																		},
																		"nativeSrc": "10547:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10547:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10494:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10494:43:10"
																},
																"nativeSrc": "10494:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10494:71:10"
															},
															"nativeSrc": "10494:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10494:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10619:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10619:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10632:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10632:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10643:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10643:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10628:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10628:3:10"
																		},
																		"nativeSrc": "10628:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10628:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10575:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10575:43:10"
																},
																"nativeSrc": "10575:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10575:72:10"
															},
															"nativeSrc": "10575:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10575:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10701:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10701:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10714:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10714:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10725:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10725:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10710:3:10"
																		},
																		"nativeSrc": "10710:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10710:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10657:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10657:43:10"
																},
																"nativeSrc": "10657:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10657:72:10"
															},
															"nativeSrc": "10657:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10657:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10294:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10404:9:10",
														"nodeType": "YulTypedName",
														"src": "10404:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10416:6:10",
														"nodeType": "YulTypedName",
														"src": "10416:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10424:6:10",
														"nodeType": "YulTypedName",
														"src": "10424:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10432:6:10",
														"nodeType": "YulTypedName",
														"src": "10432:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10443:4:10",
														"nodeType": "YulTypedName",
														"src": "10443:4:10",
														"type": ""
													}
												],
												"src": "10294:442:10"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract does not accept ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot recover habit token\")\n\n    }\n\n    function abi_encode_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"903": [
									{
										"length": 32,
										"start": 664
									},
									{
										"length": 32,
										"start": 938
									},
									{
										"length": 32,
										"start": 1239
									},
									{
										"length": 32,
										"start": 1546
									},
									{
										"length": 32,
										"start": 1719
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610094575f3560e01c8063a8a65a7811610058578063a8a65a78146101a6578063b88a802f146101ce578063dd49756e146101e4578063f2fde38b1461020c578063f7b2a7be14610234576100d4565b8063715018a6146100d857806373b2e80e146100ee5780638980f11f1461012a5780638c70d452146101525780638da5cb5b1461017c576100d4565b366100d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cb90610b5d565b60405180910390fd5b5f5ffd5b3480156100e3575f5ffd5b506100ec61025e565b005b3480156100f9575f5ffd5b50610114600480360381019061010f9190610bd9565b610271565b6040516101219190610c1e565b60405180910390f35b348015610135575f5ffd5b50610150600480360381019061014b9190610c6a565b61028e565b005b34801561015d575f5ffd5b506101666103a8565b6040516101739190610d03565b60405180910390f35b348015610187575f5ffd5b506101906103cc565b60405161019d9190610d2b565b60405180910390f35b3480156101b1575f5ffd5b506101cc60048036038101906101c79190610d44565b6103f3565b005b3480156101d9575f5ffd5b506101e261043c565b005b3480156101ef575f5ffd5b5061020a60048036038101906102059190610d44565b6106a7565b005b348015610217575f5ffd5b50610232600480360381019061022d9190610bd9565b610736565b005b34801561023f575f5ffd5b506102486107ba565b6040516102559190610d7e565b60405180910390f35b6102666107c0565b61026f5f610847565b565b6003602052805f5260405f205f915054906101000a900460ff1681565b6102966107c0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031b90610de1565b60405180910390fd5b61035661032f6103cc565b828473ffffffffffffffffffffffffffffffffffffffff166109089092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f46d2e6e71fc567877b817ff3d940571f989d4ee4d40f2b70806d36e738feef6f8260405161039c9190610d7e565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103fb6107c0565b806002819055507f9639dea65e74b72b1b86ccf3e4f9b6d23b88d2aad2f103d0b3afe394e67edade816040516104319190610d7e565b60405180910390a150565b610444610987565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590610e49565b60405180910390fd5b5f6002549050807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052e9190610d2b565b602060405180830381865afa158015610549573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056d9190610e7b565b10156105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610ef0565b60405180910390fd5b600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061064e33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109089092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516106949190610d7e565b60405180910390a2506106a56109d6565b565b6106af6107c0565b6106fc3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109df909392919063ffffffff16565b7f77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d18160405161072b9190610d7e565b60405180910390a150565b61073e6107c0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107a59190610d2b565b60405180910390fd5b6107b781610847565b50565b60025481565b6107c8610a61565b73ffffffffffffffffffffffffffffffffffffffff166107e66103cc565b73ffffffffffffffffffffffffffffffffffffffff161461084557610809610a61565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161083c9190610d2b565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610982838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161093b929190610f0e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a68565b505050565b6002600154036109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c390610f7f565b60405180910390fd5b6002600181905550565b60018081905550565b610a5b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610a1493929190610f9d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a68565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180610a87576040513d5f823e3d81fd5b3d92505f519150505f8214610aa0576001811415610abb565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610afd57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610af49190610d2b565b60405180910390fd5b50505050565b5f82825260208201905092915050565b7f436f6e747261637420646f6573206e6f742061636365707420455448000000005f82015250565b5f610b47601c83610b03565b9150610b5282610b13565b602082019050919050565b5f6020820190508181035f830152610b7481610b3b565b9050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ba882610b7f565b9050919050565b610bb881610b9e565b8114610bc2575f5ffd5b50565b5f81359050610bd381610baf565b92915050565b5f60208284031215610bee57610bed610b7b565b5b5f610bfb84828501610bc5565b91505092915050565b5f8115159050919050565b610c1881610c04565b82525050565b5f602082019050610c315f830184610c0f565b92915050565b5f819050919050565b610c4981610c37565b8114610c53575f5ffd5b50565b5f81359050610c6481610c40565b92915050565b5f5f60408385031215610c8057610c7f610b7b565b5b5f610c8d85828601610bc5565b9250506020610c9e85828601610c56565b9150509250929050565b5f819050919050565b5f610ccb610cc6610cc184610b7f565b610ca8565b610b7f565b9050919050565b5f610cdc82610cb1565b9050919050565b5f610ced82610cd2565b9050919050565b610cfd81610ce3565b82525050565b5f602082019050610d165f830184610cf4565b92915050565b610d2581610b9e565b82525050565b5f602082019050610d3e5f830184610d1c565b92915050565b5f60208284031215610d5957610d58610b7b565b5b5f610d6684828501610c56565b91505092915050565b610d7881610c37565b82525050565b5f602082019050610d915f830184610d6f565b92915050565b7f43616e6e6f74207265636f76657220686162697420746f6b656e0000000000005f82015250565b5f610dcb601a83610b03565b9150610dd682610d97565b602082019050919050565b5f6020820190508181035f830152610df881610dbf565b9050919050565b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f610e33600f83610b03565b9150610e3e82610dff565b602082019050919050565b5f6020820190508181035f830152610e6081610e27565b9050919050565b5f81519050610e7581610c40565b92915050565b5f60208284031215610e9057610e8f610b7b565b5b5f610e9d84828501610e67565b91505092915050565b7f496e73756666696369656e7420746f6b656e73000000000000000000000000005f82015250565b5f610eda601383610b03565b9150610ee582610ea6565b602082019050919050565b5f6020820190508181035f830152610f0781610ece565b9050919050565b5f604082019050610f215f830185610d1c565b610f2e6020830184610d6f565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610f69601f83610b03565b9150610f7482610f35565b602082019050919050565b5f6020820190508181035f830152610f9681610f5d565b9050919050565b5f606082019050610fb05f830186610d1c565b610fbd6020830185610d1c565b610fca6040830184610d6f565b94935050505056fea2646970667358221220273c4081066474e69f851888ffe1134d7dc4d85426babdc87c4ed314476d38e364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x94 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8A65A78 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA8A65A78 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xF7B2A7BE EQ PUSH2 0x234 JUMPI PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8C70D452 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI PUSH2 0xD4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x25E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x166 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x43C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x26F PUSH0 PUSH2 0x847 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x296 PUSH2 0x7C0 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B SWAP1 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x356 PUSH2 0x32F PUSH2 0x3CC JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x908 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46D2E6E71FC567877B817FF3D940571F989D4EE4D40F2B70806D36E738FEEF6F DUP3 PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x7C0 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x9639DEA65E74B72B1B86CCF3E4F9B6D23B88D2AAD2F103D0B3AFE394E67EDADE DUP2 PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x444 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST LT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x64E CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x908 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6A5 PUSH2 0x9D6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6AF PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x6FC CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x77ACF75E237F9AAE98F997395832D522BDB695E4A9BD07704936AA889A3667D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x73E PUSH2 0x7C0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B7 DUP2 PUSH2 0x847 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0xA61 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E6 PUSH2 0x3CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x845 JUMPI PUSH2 0x809 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x982 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x93B SWAP3 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x9CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA5B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA14 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAA0 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xABB JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xAFD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F6573206E6F74206163636570742045544800000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB47 PUSH1 0x1C DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xB52 DUP3 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB74 DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBA8 DUP3 PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBEE JUMPI PUSH2 0xBED PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFB DUP5 DUP3 DUP6 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC18 DUP2 PUSH2 0xC04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC31 PUSH0 DUP4 ADD DUP5 PUSH2 0xC0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC49 DUP2 PUSH2 0xC37 JUMP JUMPDEST DUP2 EQ PUSH2 0xC53 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC64 DUP2 PUSH2 0xC40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC8D DUP6 DUP3 DUP7 ADD PUSH2 0xBC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC9E DUP6 DUP3 DUP7 ADD PUSH2 0xC56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCCB PUSH2 0xCC6 PUSH2 0xCC1 DUP5 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCDC DUP3 PUSH2 0xCB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCED DUP3 PUSH2 0xCD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFD DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD16 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3E PUSH0 DUP4 ADD DUP5 PUSH2 0xD1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD66 DUP5 DUP3 DUP6 ADD PUSH2 0xC56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0xC37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207265636F76657220686162697420746F6B656E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDCB PUSH1 0x1A DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD6 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF8 DUP2 PUSH2 0xDBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE33 PUSH1 0xF DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE60 DUP2 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE75 DUP2 PUSH2 0xC40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE8F PUSH2 0xB7B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE9D DUP5 DUP3 DUP6 ADD PUSH2 0xE67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E7300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEDA PUSH1 0x13 DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE5 DUP3 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF07 DUP2 PUSH2 0xECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF21 PUSH0 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF69 PUSH1 0x1F DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xF74 DUP3 PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF96 DUP2 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFB0 PUSH0 DUP4 ADD DUP7 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xFBD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0xFCA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 EXTCODECOPY BLOCKHASH DUP2 MOD PUSH5 0x74E69F8518 DUP9 SELFDESTRUCT RJUMPI 0x134D PUSH30 0xC4D85426BABDC87C4ED314476D38E364736F6C634300081E003300000000 ",
							"sourceMap": "306:1877:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2134:38;;;;;;;;;;:::i;:::-;;;;;;;;306:1877;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;472:42:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1777:311;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;397:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;954:164:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1126:457;;;;;;;;;;;;;:::i;:::-;;1591:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;438:27:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;472:42:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;1777:311::-;1531:13:0;:11;:13::i;:::-;1924:10:9::1;1900:35;;:12;:35;;::::0;1892:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1977:50;2011:7;:5;:7::i;:::-;2020:6;1984:12;1977:33;;;;:50;;;;;:::i;:::-;2059:12;2043:37;;;2073:6;2043:37;;;;;;:::i;:::-;;;;;;;;1777:311:::0;;:::o;397:34::-;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;954:164:9:-;1531:13:0;:11;:13::i;:::-;1047::9::1;1032:12;:28;;;;1076:34;1096:13;1076:34;;;;;;:::i;:::-;;;;;;;;954:164:::0;:::o;1126:457::-;2261:21:4;:19;:21::i;:::-;1191:10:9::1;:22;1202:10;1191:22;;;;;;;;;;;;;;;;;;;;;;;;;1190:23;1182:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1246:21;1270:12;;1246:36;;1354:13;1315:10;:20;;;1344:4;1315:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1293:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;1452:4;1427:10;:22;1438:10;1427:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1467:50;1491:10;1503:13;1467:10;:23;;;;:50;;;;;:::i;:::-;1549:10;1535:40;;;1561:13;1535:40;;;;;;:::i;:::-;;;;;;;;1171:412;2303:20:4::0;:18;:20::i;:::-;1126:457:9:o;1591:178::-;1531:13:0;:11;:13::i;:::-;1660:62:9::1;1688:10;1708:4;1715:6;1660:10;:27;;;;:62;;;;;;:::i;:::-;1738:23;1754:6;1738:23;;;;;;:::i;:::-;;;;;;;;1591:178:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;438:27:9:-;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:178::-;322:30;318:1;310:6;306:14;299:54;182:178;:::o;366:366::-;508:3;529:67;593:2;588:3;529:67;:::i;:::-;522:74;;605:93;694:3;605:93;:::i;:::-;723:2;718:3;714:12;707:19;;366:366;;;:::o;738:419::-;904:4;942:2;931:9;927:18;919:26;;991:9;985:4;981:20;977:1;966:9;962:17;955:47;1019:131;1145:4;1019:131;:::i;:::-;1011:139;;738:419;;;:::o;1244:117::-;1353:1;1350;1343:12;1490:126;1527:7;1567:42;1560:5;1556:54;1545:65;;1490:126;;;:::o;1622:96::-;1659:7;1688:24;1706:5;1688:24;:::i;:::-;1677:35;;1622:96;;;:::o;1724:122::-;1797:24;1815:5;1797:24;:::i;:::-;1790:5;1787:35;1777:63;;1836:1;1833;1826:12;1777:63;1724:122;:::o;1852:139::-;1898:5;1936:6;1923:20;1914:29;;1952:33;1979:5;1952:33;:::i;:::-;1852:139;;;;:::o;1997:329::-;2056:6;2105:2;2093:9;2084:7;2080:23;2076:32;2073:119;;;2111:79;;:::i;:::-;2073:119;2231:1;2256:53;2301:7;2292:6;2281:9;2277:22;2256:53;:::i;:::-;2246:63;;2202:117;1997:329;;;;:::o;2332:90::-;2366:7;2409:5;2402:13;2395:21;2384:32;;2332:90;;;:::o;2428:109::-;2509:21;2524:5;2509:21;:::i;:::-;2504:3;2497:34;2428:109;;:::o;2543:210::-;2630:4;2668:2;2657:9;2653:18;2645:26;;2681:65;2743:1;2732:9;2728:17;2719:6;2681:65;:::i;:::-;2543:210;;;;:::o;2759:77::-;2796:7;2825:5;2814:16;;2759:77;;;:::o;2842:122::-;2915:24;2933:5;2915:24;:::i;:::-;2908:5;2905:35;2895:63;;2954:1;2951;2944:12;2895:63;2842:122;:::o;2970:139::-;3016:5;3054:6;3041:20;3032:29;;3070:33;3097:5;3070:33;:::i;:::-;2970:139;;;;:::o;3115:474::-;3183:6;3191;3240:2;3228:9;3219:7;3215:23;3211:32;3208:119;;;3246:79;;:::i;:::-;3208:119;3366:1;3391:53;3436:7;3427:6;3416:9;3412:22;3391:53;:::i;:::-;3381:63;;3337:117;3493:2;3519:53;3564:7;3555:6;3544:9;3540:22;3519:53;:::i;:::-;3509:63;;3464:118;3115:474;;;;;:::o;3595:60::-;3623:3;3644:5;3637:12;;3595:60;;;:::o;3661:142::-;3711:9;3744:53;3762:34;3771:24;3789:5;3771:24;:::i;:::-;3762:34;:::i;:::-;3744:53;:::i;:::-;3731:66;;3661:142;;;:::o;3809:126::-;3859:9;3892:37;3923:5;3892:37;:::i;:::-;3879:50;;3809:126;;;:::o;3941:140::-;4005:9;4038:37;4069:5;4038:37;:::i;:::-;4025:50;;3941:140;;;:::o;4087:159::-;4188:51;4233:5;4188:51;:::i;:::-;4183:3;4176:64;4087:159;;:::o;4252:250::-;4359:4;4397:2;4386:9;4382:18;4374:26;;4410:85;4492:1;4481:9;4477:17;4468:6;4410:85;:::i;:::-;4252:250;;;;:::o;4508:118::-;4595:24;4613:5;4595:24;:::i;:::-;4590:3;4583:37;4508:118;;:::o;4632:222::-;4725:4;4763:2;4752:9;4748:18;4740:26;;4776:71;4844:1;4833:9;4829:17;4820:6;4776:71;:::i;:::-;4632:222;;;;:::o;4860:329::-;4919:6;4968:2;4956:9;4947:7;4943:23;4939:32;4936:119;;;4974:79;;:::i;:::-;4936:119;5094:1;5119:53;5164:7;5155:6;5144:9;5140:22;5119:53;:::i;:::-;5109:63;;5065:117;4860:329;;;;:::o;5195:118::-;5282:24;5300:5;5282:24;:::i;:::-;5277:3;5270:37;5195:118;;:::o;5319:222::-;5412:4;5450:2;5439:9;5435:18;5427:26;;5463:71;5531:1;5520:9;5516:17;5507:6;5463:71;:::i;:::-;5319:222;;;;:::o;5547:176::-;5687:28;5683:1;5675:6;5671:14;5664:52;5547:176;:::o;5729:366::-;5871:3;5892:67;5956:2;5951:3;5892:67;:::i;:::-;5885:74;;5968:93;6057:3;5968:93;:::i;:::-;6086:2;6081:3;6077:12;6070:19;;5729:366;;;:::o;6101:419::-;6267:4;6305:2;6294:9;6290:18;6282:26;;6354:9;6348:4;6344:20;6340:1;6329:9;6325:17;6318:47;6382:131;6508:4;6382:131;:::i;:::-;6374:139;;6101:419;;;:::o;6526:165::-;6666:17;6662:1;6654:6;6650:14;6643:41;6526:165;:::o;6697:366::-;6839:3;6860:67;6924:2;6919:3;6860:67;:::i;:::-;6853:74;;6936:93;7025:3;6936:93;:::i;:::-;7054:2;7049:3;7045:12;7038:19;;6697:366;;;:::o;7069:419::-;7235:4;7273:2;7262:9;7258:18;7250:26;;7322:9;7316:4;7312:20;7308:1;7297:9;7293:17;7286:47;7350:131;7476:4;7350:131;:::i;:::-;7342:139;;7069:419;;;:::o;7494:143::-;7551:5;7582:6;7576:13;7567:22;;7598:33;7625:5;7598:33;:::i;:::-;7494:143;;;;:::o;7643:351::-;7713:6;7762:2;7750:9;7741:7;7737:23;7733:32;7730:119;;;7768:79;;:::i;:::-;7730:119;7888:1;7913:64;7969:7;7960:6;7949:9;7945:22;7913:64;:::i;:::-;7903:74;;7859:128;7643:351;;;;:::o;8000:169::-;8140:21;8136:1;8128:6;8124:14;8117:45;8000:169;:::o;8175:366::-;8317:3;8338:67;8402:2;8397:3;8338:67;:::i;:::-;8331:74;;8414:93;8503:3;8414:93;:::i;:::-;8532:2;8527:3;8523:12;8516:19;;8175:366;;;:::o;8547:419::-;8713:4;8751:2;8740:9;8736:18;8728:26;;8800:9;8794:4;8790:20;8786:1;8775:9;8771:17;8764:47;8828:131;8954:4;8828:131;:::i;:::-;8820:139;;8547:419;;;:::o;8972:332::-;9093:4;9131:2;9120:9;9116:18;9108:26;;9144:71;9212:1;9201:9;9197:17;9188:6;9144:71;:::i;:::-;9225:72;9293:2;9282:9;9278:18;9269:6;9225:72;:::i;:::-;8972:332;;;;;:::o;9310:181::-;9450:33;9446:1;9438:6;9434:14;9427:57;9310:181;:::o;9497:366::-;9639:3;9660:67;9724:2;9719:3;9660:67;:::i;:::-;9653:74;;9736:93;9825:3;9736:93;:::i;:::-;9854:2;9849:3;9845:12;9838:19;;9497:366;;;:::o;9869:419::-;10035:4;10073:2;10062:9;10058:18;10050:26;;10122:9;10116:4;10112:20;10108:1;10097:9;10093:17;10086:47;10150:131;10276:4;10150:131;:::i;:::-;10142:139;;9869:419;;;:::o;10294:442::-;10443:4;10481:2;10470:9;10466:18;10458:26;;10494:71;10562:1;10551:9;10547:17;10538:6;10494:71;:::i;:::-;10575:72;10643:2;10632:9;10628:18;10619:6;10575:72;:::i;:::-;10657;10725:2;10714:9;10710:18;10701:6;10657:72;:::i;:::-;10294:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "820800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimReward()": "infinite",
								"depositTokens(uint256)": "infinite",
								"habitToken()": "infinite",
								"hasClaimed(address)": "2856",
								"owner()": "2603",
								"recoverERC20(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardAmount()": "2513",
								"setRewardAmount(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 754,
									"end": 946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 754,
									"end": 946,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 795,
									"end": 805,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 867,
									"end": 868,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 844,
									"end": 869,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 844,
									"end": 855,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 844,
									"end": 869,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 844,
									"end": 869,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 844,
									"end": 869,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 836,
									"end": 895,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 836,
									"end": 895,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 926,
									"end": 937,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 906,
									"end": 938,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 754,
									"end": 946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1892,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1893,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2048,
									"end": 2051,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2133,
									"end": 2135,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2128,
									"end": 2131,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2069,
									"end": 2136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2136,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2136,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2234,
									"end": 2237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2145,
									"end": 2238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2263,
									"end": 2265,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2258,
									"end": 2261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2254,
									"end": 2266,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2448,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2484,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2471,
									"end": 2480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2540,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2529,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2541,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2519,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2542,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2685,
									"end": 2689,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2559,
									"end": 2690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "903"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 2183,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220273c4081066474e69f851888ffe1134d7dc4d85426babdc87c4ed314476d38e364736f6c634300081e0033",
									".code": [
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "A8A65A78"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "A8A65A78"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "B88A802F"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "DD49756E"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "F7B2A7BE"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "73B2E80E"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "8980F11F"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "8C70D452"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2134,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2172,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 2183,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 472,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 472,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 472,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1777,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1777,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 397,
											"end": 431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 397,
											"end": 431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 954,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 954,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1126,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1591,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1591,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 438,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 438,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 438,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 472,
											"end": 514,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 472,
											"end": 514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "903"
										},
										{
											"begin": 1900,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1900,
											"end": 1935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1912,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1900,
											"end": 1935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1892,
											"end": 1966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1892,
											"end": 1966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2011,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2011,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2011,
											"end": 2018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1977,
											"end": 2010,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1977,
											"end": 2027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "46D2E6E71FC567877B817FF3D940571F989D4EE4D40F2B70806D36E738FEEF6F"
										},
										{
											"begin": 2073,
											"end": 2079,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2043,
											"end": 2080,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2080,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "903"
										},
										{
											"begin": 397,
											"end": 431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 397,
											"end": 431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1060,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1060,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9639DEA65E74B72B1B86CCF3E4F9B6D23B88D2AAD2F103D0B3AFE394E67EDADE"
										},
										{
											"begin": 1096,
											"end": 1109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1076,
											"end": 1110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1110,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1126,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1212,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1182,
											"end": 1233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1182,
											"end": 1233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1270,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1367,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "903"
										},
										{
											"begin": 1315,
											"end": 1335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1344,
											"end": 1348,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1315,
											"end": 1350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1315,
											"end": 1350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1315,
											"end": 1350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1367,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1367,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1293,
											"end": 1414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1293,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1452,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1427,
											"end": 1437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1448,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1491,
											"end": 1501,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1477,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "903"
										},
										{
											"begin": 1467,
											"end": 1490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1467,
											"end": 1490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1467,
											"end": 1517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1549,
											"end": 1559,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 1561,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1535,
											"end": 1575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1535,
											"end": 1575,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1688,
											"end": 1698,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1721,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1670,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "903"
										},
										{
											"begin": 1660,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1660,
											"end": 1687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1660,
											"end": 1722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "77ACF75E237F9AAE98F997395832D522BDB695E4A9BD07704936AA889A3667D1"
										},
										{
											"begin": 1754,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1738,
											"end": 1761,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1761,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 438,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 438,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 360,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 182,
											"end": 360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 322,
											"end": 352,
											"name": "PUSH",
											"source": 10,
											"value": "436F6E747261637420646F6573206E6F74206163636570742045544800000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 299,
											"end": 353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 182,
											"end": 360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 366,
											"end": 732,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 366,
											"end": 732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 508,
											"end": 511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 593,
											"end": 595,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 588,
											"end": 591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 529,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 529,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 529,
											"end": 596,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 529,
											"end": 596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 522,
											"end": 596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 522,
											"end": 596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 605,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 694,
											"end": 697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 605,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 605,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 605,
											"end": 698,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 605,
											"end": 698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 714,
											"end": 726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 707,
											"end": 726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 707,
											"end": 726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 366,
											"end": 732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 366,
											"end": 732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 366,
											"end": 732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 738,
											"end": 1157,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 738,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 904,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 927,
											"end": 945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 919,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 919,
											"end": 945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 985,
											"end": 989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 981,
											"end": 1001,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 977,
											"end": 978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 962,
											"end": 979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1019,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1150,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1019,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 738,
											"end": 1157,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 738,
											"end": 1157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 738,
											"end": 1157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 738,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1361,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1244,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1355,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1616,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1490,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1609,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1610,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1545,
											"end": 1610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1545,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1718,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1622,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1846,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1724,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1815,
											"end": 1820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1797,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1797,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1822,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1838,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1943,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1952,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1985,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 1952,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1852,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2326,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1997,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2107,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2091,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2108,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 2111,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2111,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2073,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2301,
											"end": 2308,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2256,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2326,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2422,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2332,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2366,
											"end": 2373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2415,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2422,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2524,
											"end": 2529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2509,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2509,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2753,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2681,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2746,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2681,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2753,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2964,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2842,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2933,
											"end": 2938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2915,
											"end": 2939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2940,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2895,
											"end": 2958,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 2958,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2895,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3061,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3070,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2970,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3226,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3238,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3243,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3246,
											"end": 3325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3246,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3208,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3391,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3391,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3444,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3495,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3519,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3572,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3464,
											"end": 3582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3655,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3595,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3655,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3803,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3661,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3762,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3789,
											"end": 3794,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3771,
											"end": 3795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3762,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3796,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3762,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3744,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3797,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3744,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3935,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3809,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3892,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3929,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3892,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3879,
											"end": 3929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3879,
											"end": 3929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4081,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3941,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4038,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4075,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4038,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4087,
											"end": 4246,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4087,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4233,
											"end": 4238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4188,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4239,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4188,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4087,
											"end": 4246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4087,
											"end": 4246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4087,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4502,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4252,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4386,
											"end": 4395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4374,
											"end": 4400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4374,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4492,
											"end": 4493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4490,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 4410,
											"end": 4495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4495,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4410,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4502,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4252,
											"end": 4502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4626,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4508,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4613,
											"end": 4618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4595,
											"end": 4619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4595,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4854,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 4632,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4765,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4844,
											"end": 4845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4842,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 4826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4776,
											"end": 4847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4847,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4776,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5189,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4860,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4919,
											"end": 4925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4966,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4939,
											"end": 4971,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 5055,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4936,
											"end": 5055,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4974,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4974,
											"end": 5053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5053,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4974,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 5055,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4936,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5119,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5172,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5119,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5189,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 5189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5313,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 5195,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5300,
											"end": 5305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5282,
											"end": 5306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5541,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5319,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5531,
											"end": 5532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 5463,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5534,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5463,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5541,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5723,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5547,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207265636F76657220686162697420746F6B656E000000000000"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 6095,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5729,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 5951,
											"end": 5954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5892,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5959,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5892,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 6057,
											"end": 6060,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5968,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 6061,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5968,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6086,
											"end": 6088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6081,
											"end": 6084,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 6095,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 6095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 6095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 6095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6520,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 6101,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6363,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6348,
											"end": 6352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6364,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6329,
											"end": 6338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6318,
											"end": 6365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6508,
											"end": 6512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 6382,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6513,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6382,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6691,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6526,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6683,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920636C61696D65640000000000000000000000000000000000"
										},
										{
											"begin": 6662,
											"end": 6663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 7063,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6697,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 6919,
											"end": 6922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6860,
											"end": 6927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6927,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6860,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6853,
											"end": 6927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7025,
											"end": 7028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6936,
											"end": 7029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7029,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6936,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7049,
											"end": 7052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7038,
											"end": 7057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7038,
											"end": 7057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 7063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 7063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 7063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7488,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7069,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7316,
											"end": 7320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 7476,
											"end": 7480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 7350,
											"end": 7481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7481,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 7350,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7637,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 7494,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7589,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7625,
											"end": 7630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 7598,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7631,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7598,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7637,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7994,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7643,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7741,
											"end": 7748,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7737,
											"end": 7760,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7733,
											"end": 7765,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7768,
											"end": 7847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7969,
											"end": 7976,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7949,
											"end": 7958,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 7967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 7913,
											"end": 7977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7913,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 7977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 7977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7994,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7994,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8169,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8000,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8161,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420746F6B656E7300000000000000000000000000"
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8541,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8175,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8402,
											"end": 8404,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 8397,
											"end": 8400,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 8338,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8405,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8338,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8405,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8414,
											"end": 8507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8507,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8414,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8527,
											"end": 8530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8523,
											"end": 8535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8966,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 8547,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8740,
											"end": 8749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 8754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8794,
											"end": 8798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8810,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8784,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8828,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8959,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8828,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9093,
											"end": 9097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9120,
											"end": 9129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9116,
											"end": 9134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 9212,
											"end": 9213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 9144,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 9144,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 9293,
											"end": 9295,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9275,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 9225,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9297,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 9225,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 9304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9491,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 9310,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9483,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9446,
											"end": 9447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9438,
											"end": 9444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9427,
											"end": 9484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9310,
											"end": 9491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9863,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 9497,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9724,
											"end": 9726,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9719,
											"end": 9722,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9660,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 9660,
											"end": 9727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9660,
											"end": 9727,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9660,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9825,
											"end": 9828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 9736,
											"end": 9829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9829,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9736,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9849,
											"end": 9852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9845,
											"end": 9857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 9857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9497,
											"end": 9863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 10288,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 9869,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10035,
											"end": 10039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10075,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10062,
											"end": 10071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10050,
											"end": 10076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10050,
											"end": 10076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10112,
											"end": 10132,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10086,
											"end": 10133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10150,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 10276,
											"end": 10280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10150,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 10150,
											"end": 10281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10150,
											"end": 10281,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 10150,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 10288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 10288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 10288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 10288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10483,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10562,
											"end": 10563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10551,
											"end": 10560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10544,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10494,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10565,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10494,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10632,
											"end": 10641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10619,
											"end": 10625,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10575,
											"end": 10647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10647,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 10575,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10725,
											"end": 10727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 10657,
											"end": 10729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10729,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10657,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"HabitTokenReward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"depositTokens(uint256)": "dd49756e",
							"habitToken()": "8c70d452",
							"hasClaimed(address)": "73b2e80e",
							"owner()": "8da5cb5b",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceOwnership()": "715018a6",
							"rewardAmount()": "f7b2a7be",
							"setRewardAmount(uint256)": "a8a65a78",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_habitToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"RewardAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRecovered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"habitToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"name\":\"setRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HabitTokenReward.sol\":\"HabitReward\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"HabitTokenReward.sol\":{\"keccak256\":\"0xd9aa70370c5ee2635ab7af859c91c03f9835abf2807746c81133ab921622efe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0397c9917b46247eaf60653d2bc414357ab938ae0f060e24096abe86bf4e1a4\",\"dweb:/ipfs/QmWaQQ4rSsER42zWypdfTrWV4MLoXgzKA1QAuuhoUv9Dfj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "HabitTokenReward.sol:HabitReward",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "HabitTokenReward.sol:HabitReward",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 905,
								"contract": "HabitTokenReward.sol:HabitReward",
								"label": "rewardAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 909,
								"contract": "HabitTokenReward.sol:HabitReward",
								"label": "hasClaimed",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"HabitTokenReward.sol": {
				"ast": {
					"absolutePath": "HabitTokenReward.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"HabitReward": [
							1093
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 381,
							"src": "61:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 845,
							"src": "119:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 303,
							"src": "186:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 148,
							"src": "250:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 893,
										"name": "Ownable",
										"nameLocations": [
											"330:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "330:7:9"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "330:7:9"
								},
								{
									"baseName": {
										"id": 895,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"339:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "339:15:9"
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "339:15:9"
								}
							],
							"canonicalName": "HabitReward",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1093,
							"linearizedBaseContracts": [
								1093,
								302,
								147,
								874
							],
							"name": "HabitReward",
							"nameLocation": "315:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 900,
									"libraryName": {
										"id": 897,
										"name": "SafeERC20",
										"nameLocations": [
											"368:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "368:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "362:27:9",
									"typeName": {
										"id": 899,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 898,
											"name": "IERC20",
											"nameLocations": [
												"382:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "382:6:9"
										},
										"referencedDeclaration": 380,
										"src": "382:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8c70d452",
									"id": 903,
									"mutability": "immutable",
									"name": "habitToken",
									"nameLocation": "421:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "397:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 902,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 901,
											"name": "IERC20",
											"nameLocations": [
												"397:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "397:6:9"
										},
										"referencedDeclaration": 380,
										"src": "397:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7b2a7be",
									"id": 905,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nameLocation": "453:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "438:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 904,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73b2e80e",
									"id": 909,
									"mutability": "mutable",
									"name": "hasClaimed",
									"nameLocation": "504:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "472:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 908,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "480:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "472:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 907,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "491:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 915,
									"name": "RewardClaimed",
									"nameLocation": "529:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "559:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "543:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "576:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "568:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:41:9"
									},
									"src": "523:61:9"
								},
								{
									"anonymous": false,
									"eventSelector": "77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d1",
									"id": 919,
									"name": "TokensDeposited",
									"nameLocation": "596:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "620:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "612:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:16:9"
									},
									"src": "590:38:9"
								},
								{
									"anonymous": false,
									"eventSelector": "9639dea65e74b72b1b86ccf3e4f9b6d23b88d2aad2f103d0b3afe394e67edade",
									"id": 923,
									"name": "RewardAmountUpdated",
									"nameLocation": "640:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "668:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "660:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:19:9"
									},
									"src": "634:45:9"
								},
								{
									"anonymous": false,
									"eventSelector": "46d2e6e71fc567877b817ff3d940571f989d4ee4d40f2b70806d36e738feef6f",
									"id": 929,
									"name": "TokensRecovered",
									"nameLocation": "691:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "723:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "707:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "738:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "730:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:39:9"
									},
									"src": "685:61:9"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "825:121:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "_habitToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "844:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "867:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "859:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "859:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "859:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "844:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "836:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "836:59:9"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "habitToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "906:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 952,
																"name": "_habitToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "926:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 951,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "919:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "919:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "906:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "906:32:9"
											}
										]
									},
									"id": 957,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 934,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "795:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "799:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "795:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 936,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 933,
												"name": "Ownable",
												"nameLocations": [
													"787:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "787:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "787:19:9"
										},
										{
											"arguments": [],
											"id": 938,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 937,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"807:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "807:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "807:17:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_habitToken",
												"nameLocation": "774:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "766:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:21:9"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:9"
									},
									"scope": 1093,
									"src": "754:192:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "1021:97:9",
										"statements": [
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 964,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1032:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "_rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1047:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1032:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1032:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 969,
															"name": "_rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1096:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "RewardAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "1076:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "EmitStatement",
												"src": "1071:39:9"
											}
										]
									},
									"functionSelector": "a8a65a78",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 962,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 961,
												"name": "onlyOwner",
												"nameLocations": [
													"1011:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1011:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1011:9:9"
										}
									],
									"name": "setRewardAmount",
									"nameLocation": "963:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_rewardAmount",
												"nameLocation": "987:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "979:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:23:9"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:9"
									},
									"scope": 1093,
									"src": "954:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "1171:412:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1190:23:9",
															"subExpression": {
																"baseExpression": {
																	"id": 979,
																	"name": "hasClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "1191:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 982,
																"indexExpression": {
																	"expression": {
																		"id": 980,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1202:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1206:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1202:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1191:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1215:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1182:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "1182:51:9"
											},
											{
												"assignments": [
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "currentReward",
														"nameLocation": "1254:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "1246:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1246:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"id": 989,
													"name": "rewardAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 905,
													"src": "1270:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1246:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 996,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1344:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_HabitReward_$1093",
																					"typeString": "contract HabitReward"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_HabitReward_$1093",
																					"typeString": "contract HabitReward"
																				}
																			],
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1336:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 994,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1336:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1336:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 992,
																		"name": "habitToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "1315:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1326:9:9",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 337,
																	"src": "1315:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1315:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 999,
																"name": "currentReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "1354:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1315:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e73",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1382:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5",
																"typeString": "literal_string \"Insufficient tokens\""
															},
															"value": "Insufficient tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8936288c111bb7d1b946c971bd3b8178cb07640f167f3ff2ff426c9e5ad86d5",
																"typeString": "literal_string \"Insufficient tokens\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1293:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:121:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "1293:121:9"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1004,
															"name": "hasClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1427:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1007,
														"indexExpression": {
															"expression": {
																"id": 1005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1438:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1442:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1438:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1427:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1452:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1427:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "1427:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1491:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1495:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1491:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "currentReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "1503:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1011,
															"name": "habitToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "1467:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "1467:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "1467:50:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1549:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1553:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1549:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "currentReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "1561:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "1535:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "EmitStatement",
												"src": "1530:45:9"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 975,
												"name": "nonReentrant",
												"nameLocations": [
													"1158:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "1158:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1158:12:9"
										}
									],
									"name": "claimReward",
									"nameLocation": "1135:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:2:9"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:0:9"
									},
									"scope": 1093,
									"src": "1126:457:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1649:120:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1036,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1688:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1692:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1688:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1040,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1708:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_HabitReward_$1093",
																		"typeString": "contract HabitReward"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_HabitReward_$1093",
																		"typeString": "contract HabitReward"
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1700:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1038,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1700:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1715:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1033,
															"name": "habitToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "1660:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1671:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "1660:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "1660:62:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1754:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "TokensDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1738:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "EmitStatement",
												"src": "1733:28:9"
											}
										]
									},
									"functionSelector": "dd49756e",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1030,
												"name": "onlyOwner",
												"nameLocations": [
													"1639:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1639:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1639:9:9"
										}
									],
									"name": "depositTokens",
									"nameLocation": "1600:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1622:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1614:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:16:9"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:9"
									},
									"scope": 1093,
									"src": "1591:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1881:207:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "1900:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "habitToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "1924:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1916:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1061,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1916:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1916:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1900:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207265636f76657220686162697420746f6b656e",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693",
																"typeString": "literal_string \"Cannot recover habit token\""
															},
															"value": "Cannot recover habit token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_190414961d9b7f1df559a33cf2cb004ed4e1d831a4a80f6e21b75e9498973693",
																"typeString": "literal_string \"Cannot recover habit token\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1892:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1892:74:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1073,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2011:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2020:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1070,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "1984:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1069,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "1977:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1977:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1998:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "1977:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1977:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1977:50:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1079,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "2059:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2073:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "TokensRecovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2043:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "2038:42:9"
											}
										]
									},
									"functionSelector": "8980f11f",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "onlyOwner",
												"nameLocations": [
													"1871:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1871:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1871:9:9"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "1786:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1817:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1809:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1848:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1840:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:63:9"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:0:9"
									},
									"scope": 1093,
									"src": "1777:311:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "2123:57:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "436f6e747261637420646f6573206e6f742061636365707420455448",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2141:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212",
																"typeString": "literal_string \"Contract does not accept ETH\""
															},
															"value": "Contract does not accept ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_08ae37e65946ca92121a7e5e2859cb20716b36e841bd1f457a89ab8043210212",
																"typeString": "literal_string \"Contract does not accept ETH\""
															}
														],
														"id": 1087,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "2134:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2134:38:9"
											}
										]
									},
									"id": 1092,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2103:2:9"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2123:0:9"
									},
									"scope": 1093,
									"src": "2096:84:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1094,
							"src": "306:1877:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								915,
								919,
								923,
								929
							]
						}
					],
					"src": "33:2150:9"
				},
				"id": 9
			}
		}
	}
}